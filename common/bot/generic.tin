#class {bot} {open}

#var bot[active] 1;
#var bot[paused] 0;
#var bot[walk] 1;

#var bot[foundmob] 0;
#var bot[foundobject] 0;
#var bot[foundplayer] 0;

#var bot[stats][mobs] 0;
#var bot[stats][xp] 0;
#var bot[stats][gxp] 0;
#var bot[stats][coins] 0;
#var bot[stats][loop][mobs] 0;
#var bot[stats][loop][xp] 0;
#var bot[stats][loop][gxp] 0;
#var bot[stats][loop][coins] 0;
#var temp_xp 0;
#var temp_coins 0;

#format {bot[start-time]} {%T} {};

#NOP -- pre_bot check is loaded via the char/user/config.tin;
.pre_bot_check;

#NOP -- If we're not resuming a bot, then set the step to 1, expand the botpath, and set the botmobs
#if {$botResume} {
    #NOP;
} {
    #var bot[step] 1;
    #list bot[steps] create {$bot[path]};
    #NOP -- If user is a necromancer, add the undeads from conjure to the botmobs;
    #if {"$guild" == "necromancer"} {
        #list botmobs add {{{long} {An undead smote} {target} {smote}}};
        #list botmobs add {{{long} {An undead visyn} {target} {visyn}}};
        #list botmobs add {{{long} {An undead spirit} {target} {spirit}}};
        #list botmobs add {{{long} {An undead horrin} {target} {horrin}}};
        #list botmobs add {{{long} {An undead zombie} {target} {zombie}}};
        #list botmobs add {{{long} {An undead skeleton} {target} {skeleton}}};
        #list botmobs add {{{long} {An undead wrack} {target} {wrack}}};
    };
    #var bot[mobs] $botmobs;
};


#if $check_death {
        #echo {<ffe>------ CHECKDEATH IS ACTIVE --------<088>};
    } {
        #echo {<ffe>------ CHECKDEATH IS NOT ACTIVE --------<088>};
};

#alias bot_report {
    #var bot_loop_xp $bot[stats][loop][xp];
    #var bot_xp $bot[stats][xp];
    #var bot_loop_coins $bot[stats][loop][coins];
    #var bot_coins $bot[stats][coins];
    
    #format loop1 {%+20s %-20s} {<BBB><aad>          Mobs Killed: $bot[stats][loop][mobs]};
    #format loop2 {%+20s %-20s} {<BBB><aad>            XP Gained: @thousandsFormatNumber{$bot_loop_xp}};
    #format loop3 {%+20s %-20s} {<BBB><aad>         Coins Earned: @thousandsFormatNumber{$bot_loop_coins}};
    
    #format total1 {%+20s %-20s} {<BBB><aad>          Mobs Killed: $bot[stats][mobs]};
    #format total2 {%+20s %-20s} {<BBB><aad>            XP Gained: @thousandsFormatNumber{$bot_xp}};
    #format total3 {%+20s %-20s} {<BBB><aad>         Coins Earned: @thousandsFormatNumber{$bot_coins}};
    
    #echo {<BBB><aad>---------------------------------------------------<088>};
    #echo {<BBB><aad>--------------     Current Loop     ---------------<088>};
    #echo {$loop1};
    #echo {$loop2};
    #echo {$loop3};
    #echo {<BBB><aad>---------------------------------------------------<088>};
    #echo {<BBB><aad>--------------     Total Run        ---------------<088>};
    #echo {$total1};
    #echo {$total2};
    #echo {$total3};
    #echo {<BBB><aad>---------------------------------------------------<088>};
    #echo {<BBB><aad>---------------------------------------------------<088>};
};

#alias playercheck {
    #if $bot[playercheck] {
        #var bot[playercheck] 0;
        #delay .2 {#echo {<BAF><ffe>------ PLAYERCHECK IS NOW OFF --------<088>}};
    } {
        #var bot[playercheck] 1;
        #delay .2 {#echo {<BAF><ffe>------ PLAYERCHECK IS NOW ON --------<088>}};
    };
};


#alias {.backupBot} {
    #if {"$bot[alias]" != "abyss" && "$bot[alias]" != "sewers"} {
        #unvar lastBot;
        #map get roomvnum bot[pause_room];
        #var lastBot[file] $bot[file];
        #var lastBot[curVnum] $bot[curVnum];
        #var lastBot[pause_room] $bot[pause_room];
    };
};

/* kill the bot */
#alias {.stop} {
    .backupBot;
    #unvar bot;
    #unalias {..};
    #class {bot} {kill};
    #echo {Bot killed.};
    #if {"$draw[status][active]" == "on"} {#delay 2 {draw_caption_status}};
};

#alias .pause {
    .backupBot;
    #undelay bot_kick;
    #var bot[paused] 1;
    #if {"$draw[status][active]" == "on"} {#delay 2 {draw_caption_status}};
};

#alias .unpause {
    #var bot[paused] 0;
    #if {"$draw[status][active]" == "on"} {#delay 2 {draw_caption_status}};
};

#alias .botStep {
    #if !$bot[paused] {
        #if {$bot[step] >= &bot[steps][]} {
            ${bot[steps][${bot[step]}]};
            .botComplete;
        } {
            ${bot[steps][${bot[step]}]};
            #math bot[step] {$bot[step] + 1};
        };
    };
};

#alias {.botStopWalking} {
    #map get roomvnum bot[curVnum];
    #var bot[walk] 0;
    #if {"$draw[status][active]" == "on"} {draw_caption_status};
};

#alias {.determineBotAction} {
    #if !$bot[paused] {
        .botStopWalking;
        #if {$bot[foundplayer]} {
            #if $debug[bot] {#echo {<cfa>BOT DEBUG:  Found player - calling .botStep<088>}};
            #var bot[walk] 1;
            .botStep;
        } {
            #if {$collector[items]} {
                #if {"$area" == "Chaotic Sewers"} {#NOP} {get all;}
            };
            #if {$bot[foundmob]} {
                #if $debug[bot] {#echo {<cfa>BOT DEBUG:  Mob in the list has been found<088>}};
                .pre_fight_check;
                #if {$pre_fight_actions} {
                    .pre_fight_actions;
                };

                #if {!$bot[aggro-mob]} {
                    #if {$mob_kill_action} {
                        mka $mob[target];
                    } {
                        kill $mob[target];
                    };
                };
            } {
                #if {$bot[foundobject]} {
                    #send $object_action;
                    #var bot[foundobject] 0;
                } {
                    #if {$check_room} {
                        .check_room;
                    } {
                        #if $debug[bot] {#echo {<cfa>BOT DEBUG: No mob, no item, no check room - calling .botStep<088>}};
                        #var bot[walk] 1;
                        .botStep;
                    };
                };
            };
        };
    };
};

#NOP -- starts or continues the bot after it's loaded;
#alias {..} {.unpause;glance};

#alias {.bot} {#if {$bot[paused] == 0} {..}};

#action {----- BOT REGISTERED KILL -----} {
    #if {"$deathReport[mob_killed]" == "Fire Mite"} {
        #if {"$guild" == "mage"} {cast spell tap on corpse;cast corpse blast};
        #if {"$guild" == "bard"} {perform dirge};
        .bot;
    } {
        #NOP -- strategy actions & toggle maintenance that need to fire after all corpsetrig actions if bot active;
        #if {"$guild" == "fremen"} {
            #if {"$toggles[fremen][hold]" == "0"} {
                #var toggles[fremen][hold] 1;
                #if {$debug[toggle]} {#echo {<ffa>debug toggles: corpsetrig fired with bot active - hold toggle set to 1:<088> $toggles[fremen][hold]}};
            };
            #if {"$toggles[fremen][stun]" == "0"} {
                #var toggles[fremen][stun] 1;
                #if {$debug[toggle]} {#echo {<ffa>debug toggles: corpsetrig fired with bot active - stun toggle set to 1:<088> $toggles[fremen][stun]}};
            };
            #if {"$toggles[fremen][enfeeblement]" == "0"} {
                #var toggles[fremen][enfeeblement] 1;
                #if {$debug[toggle]} {#echo {<ffa>debug toggles: corpsetrig fired with bot active - enfeeblement toggle set to 1:<088> $toggles[fremen][enfeeblement]}};
            };
            checkStrategy {suspend} {#send {!suspend}};
        };
        
        #var bot[foundmob] 0;
        #var bot[aggro-mob] 0;
        #if !$idle_flag {
            #if {"$bot[alias]" == "knights"} {#NOP} {
                #if $actions_stacked {
                    do_action;
                    #delay 2 {
                        .bot;
                    };
                } {
                    #delay .5 {.bot};
                };
            };
        };
    };
} {1};


#NOP -- If you're not in combat and not walking, then begin walking;
#ticker {bot_ticker} {
    #if !$bot[paused] {
        #if {$bot[active] && !$idle_flag && !$bot[walk] && !$incombat} {
            #delay {bot_kick} {
                #if {!$bot[walk] && !$incombat} {
                    #echo {<dfa>BOT STUCK RESUMING IN 3 SECONDS<088>};
                    #delay {bot_restart} {.bot} {3};
                };
            } {3};
        };
    };
} {5};


/* Bot end actions... */
#alias {.botComplete} {
    #NOP -- We do a BOT COMPLETE here to give a pattern for kayos stepper to match and start loading;
    #NOP -- the bunker botpaths;
    #showme {------- BOT COMPLETE -----};
    #echo {<dfa>BOT HAS COMPLETED LOOP ENTERED<088>};
    #if !$bot[paused] {
        #if {!$bot[loop]} {
            #echo {<dfa>\nBot finished.<088>};
            #format {bot[report-time]} {%T} {};
            #math bot[delta-time] {$bot[report-time] - $bot[start-time]};
            #if {$bot[delta-time] > 3600} {
                #math bot[delta-time] {$bot[delta-time] / 3600 * 1.00};
                #math bot[delta-rate] {$bot[stats][xp] / $bot[delta-time]};
                #var xp_rate_str @thousandsFormatNumber{$bot[delta-rate]}/hr ($bot[delta-time] Hrs);
            } {
                #math bot[delta-time] {$bot[delta-time] / 60 * 1.00};
                #math bot[delta-rate] {$bot[stats][xp] * 60 / $bot[delta-time]};
                #var xp_rate_str @thousandsFormatNumber{$bot[delta-rate]}/hr ($bot[delta-time] mins);
            };
            #var temp_xp $bot[stats][xp];
            ptell Bot Complete. Mobs Killed: $bot[stats][mobs] XP Gained: @thousandsFormatNumber{$temp_xp} ($xp_rate_str);
            #echo {<dfa>Coins Earned: $bot[stats][coins]<088>};
            #if {&{botcycle[]} > 0} {
                .stop;
                nextarea;
            } {
                .stop;
            };
        } {
            #if $bot[stats][loop][mobs] {
                #var bot[stats][loop][mobs] 0;
                #var bot[stats][loop][xp] 0;
                #var bot[stats][loop][coins] 0;
                #echo {\nLooping bot.};
                #var bot[step] 1;
                .bot;
            } {
                #echo {\nBot finished.};
                #format {bot[report-time]} {%T} {};
                #math bot[delta-time] {$bot[report-time] - $bot[start-time]};
                #if {$bot[delta-time] > 3600} {
                    #math bot[delta-time] {$bot[delta-time] / 3600 * 1.00};
                    #math bot[delta-rate] {$bot[stats][xp] / $bot[delta-time]};
                    #var xp_rate_str @thousandsFormatNumber{$bot[delta-rate]}/hr ($bot[delta-time] Hrs);
                } {
                    #math bot[delta-time] {$bot[delta-time] / 60 * 1.00};
                    #math bot[delta-rate] {$bot[stats][xp] * 60 / $bot[delta-time]};
                    #var xp_rate_str @thousandsFormatNumber{$bot[delta-rate]}/hr ($bot[delta-time] mins);
                };
                #var temp_xp $bot[stats][xp];
                ptell Bot Complete. Mobs Killed: $bot[stats][mobs] XP Gained: @thousandsFormatNumber{$temp_xp} ($xp_rate_str);
                #echo {Coins Earned: $bot[stats][coins]};
                #if {&{botcycle[]} > 0} {
                    .stop;
                    nextarea;
                } {
                    .stop;
                };
            }
        };
    };
} {2};


#class {bot} {close}