#class {guild_actions} {kill}
#class {guild_actions} {open}

#act {%w moans to you: Braaaainnnnnsssss!$} {
    #format wineCustomer {%l} {%1};
    createbw wine;
    give wine to $wineCustomer;
};

#act {^Acolyte has no mana stored.$} {
    #var my[acolyte][mana] 0;
}

#act {^The blades stop swirling and shimmer into nothingness.$} {
    #var my[effects][blade] OFF;
}

#act {^You exercise your lore in the summonings to call forth a blade barrier.$} {
    #var my[effects][blade] ON;
}

#act {^The golden glow around you fades away.$} {
    glight on
};

#act {^The cobalt aura shimmers away. You feel less charismatic.$} {
    #var my[effects][bene] OFF;
};

#act {^You enshroud Yourself in a shimmering cobalt aura.$} {
    #var my[effects][bene] ON;
};

#act {^The divinely bright aura settles around you. You feel} {
    #var my[effects][bless] ON;
};

#act {^You feel altogether slower as the divine blessing fades away.$} {
    #var my[effects][bless] OFF;
}

#act {%w tugs on your sleeve persistently.}{
    #format {mytarget}{%l}{%1};
    !radiance $mytarget;
};

#act {%w pulls your leg!}{
    #format {mytarget}{%l}{%1};
    !invigorate $mytarget;
};

#act {You feel yourself slow back down to normal speed.}{
    #var my[effects][haste] OFF;
}

#act {Wise and powerful %*, hasten my reflexes and quicken my body}{
    #var my[effects][haste] ON;
}

#act {HASTE!}{
    #var my[effects][haste] ON;
}

#act {You are already affected by a haste spell}{
    #var my[effects][haste] ON;
}

#act {Suddenly, a High Guard arrives from Solaris' side to}{
    #var {my[effects][psummon][present]}{ON};
}
#act {You have already summoned help.}{
    #var {my[effects][psummon][present]}{ON};
}

#act {Suddenly, High Guard grows to mammoth size!}{
    #var {my[effects][psummon][growth]}{ON};
}
#act {Animal Growth has already been cast on High Guard.}{
    #var {my[effects][psummon][growth]}{ON};
}

#NOP -- hmonitor healing
#var hmonitor_hp_heal 1;
#var hmonitor_sp_heal 1;
#var hmonitor_hp_percent .9;
#var hmonitor_sp_percent .9;

#alias hp_monitor {
    #math hmonitor_hp_percent {%1 * .01};
};

#alias sp_monitor {
    #math hmonitor_sp_percent {%1 * .01};
};

#action {Status of %w: %d\/%d hp  %d\/%d sp} {
    #line gag;
    #format {lower} {%l} {%1};
    #math hmonitor[hp][current] %2;
    #math hmonitor[hp][max] %3;
    #math hmonitor[hp][percent] {$hmonitor[hp][current] / $hmonitor[hp][max]};
    #math hmonitor[sp][current] %4;
    #math hmonitor[sp][max] %5;
    #math hmonitor[sp][percent] {$hmonitor[sp][current] / $hmonitor[sp][max]};
    #if {$hmonitor[hp][percent] < $hmonitor_hp_percent} {
        #if $hmonitor_hp_heal {#var hmonitor_hp_heal 0;invigorate $lower;#delay .5 {#var hmonitor_hp_heal 1;}};
    };
    #if {$hmonitor[sp][percent] < $hmonitor_sp_percent} {
        #if $hmonitor_sp_heal {#var hmonitor_sp_heal 0;radiance $lower;#delay .5 {#var hmonitor_sp_heal 1;}};
    };

    #math caption_hmonitor_hp_percent {$hmonitor_hp_percent * 100};
    #math caption_hmonitor_sp_percent {$hmonitor_sp_percent * 100};
    #var caption_hmonitor {<dab>Hmonitor: <088> <bec>Toxin<088> <cfb>HP: $hmonitor[hp][current] / $hmonitor[hp][max] ($caption_hmonitor_hp_percent%)<088> <aee>SP: $hmonitor[sp][current]/$hmonitor[sp][max] ($caption_hmonitor_sp_percent%)};
    #var caption_data[hmonitor] {\n ${caption_hmonitor}};
} {1};

#class {guild_actions} {close}