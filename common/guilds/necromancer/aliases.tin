#NOP --- ALIASES
#class {guild_aliases} {kill}
#class {guild_aliases} {open}

#NOP Evaluate a calculation;
#FUNCTION {fEval}
{
  #MATH {result} {%1};
};

#alias check_chest {
    #action {-i-A small, blood-filled crystal decanter%*} {
        #regex {%%1} {7B{[0-9]+}} {#var foundtimes &1};
        #math my[necromancer][decanters][full] {$my[necromancer][decanters][full] + $foundtimes};
    } {1};
    qtrance retrieve/examine chest/deliver;
    #unaction {-i-A small, blood-filled crystal decanter %*}
};

#alias {preserve_remains} {
    checkStrategy {gemino} {
        preserve gemino remains;
        keep all preservation;
    } {
        preserve get;
        keep all preservation;
    };
};

#alias qtNP {
    i;
    #delay 2 {
        #if {$corpses[total] >= 10} {
            #if {$corpses[coffin] >= 10} {
                #if $mask[active] {maskNPc 10} {qtNPc 20};
            } {
                #if {$corpses[freezer] >= 10} {
                    #if $mask[active] {maskNPf 10} {qtNPf 20};
                } {
                    #if {$corpses[cooler] >= 10} {
                        #if $mask[active] {maskNPcl 10} {qtNPcl 20};
                    };
                };
            };
        };
    };
};

#alias {maskNP%+1..w %+1..d} {
    #send {!remove velvet hat};
    #send {!wear mask of gemino mortis};
    #var tempContainer %1;
    #format tempNP {%d} {%2};
    #line oneshot #action {As you look through the mask, the eyes flash briefly with a dim, blue light.} {qtNP${tempContainer} $tempNP;#delay 6 {#send {!remove mask};#send {!wear velvet hat};}} {1};
};

#alias qtNPc {
    #format tempNP {%d} {%1};
    #if $mask[active] {#math tempNPabs {$tempNP * 2}} {#var tempNPabs $tempNP};
    #if {"%1" = ""} {
        #send {qatrance qtrance unwrap>10;;qtrance preserve remains/absorb>20};
    } {
        #send {qatrance qtrance unwrap>$tempNP;;qtrance preserve remains/absorb>${tempNPabs}};
    };
};

#alias qtNPf {
    #format tempNP {%d} {%1};
    #if $mask[active] {#math tempNPabs {$tempNP * 2}} {#var tempNPabs $tempNP};
    #if {"%1" = ""} {
        #send {qatrance qtrance deslab>10;;qtrance preserve remains/absorb>20};
    } {
        #send {qatrance qtrance deslab>$tempNP;;qtrance preserve remains/absorb>${tempNPabs}};
    };
};

#alias qtNPcl {
    #format tempNP {%d} {%1};
    #if $mask[active] {#math tempNPabs {$tempNP * 2}} {#var tempNPabs $tempNP};
    #if {"%1" = ""} {
        #send {qatrance qtrance uncooler corpse>10;;qtrance preserve remains/absorb>20};
    } {
        #echo {absorb count is ${tempNPabs}};
        #send {qatrance qtrance uncooler corpse>$tempNP;;qtrance preserve remains/absorb>${tempNPabs}};
    };
};

#alias conjureUndead {
    #loop 1 $my[necromancer][conjure_undead] i {conjure undead;kill undead;rabies undead;corrode undead};
};

#alias nukeUndeadAbs {
    #var ogEnemy $enemy[name_numbers];
    #var undeadKilled 0;
    ktrig OFF;
    #loop 1 $my[necromancer][conjure_undead] i {conjure undead;kill undead;rabies undead;corrode undead};
    kill $ogEnemy;
    unholy ground;
    #action {%* dealt the killing blow to Undead.} {
        #math undeadKilled {$undeadKilled + 1};
    } {1};
    #delay 10 {
        #if $mask[active] {#math undeadKilled {$undeadKilled * 2}};
        #${undeadKilled} qtrance preserve remains/absorb;
        #unaction {%* dealt the killing blow to Undead.};
        ktrig ON;
    };
};

#alias nukeUndeadPres {
    #var ogEnemy $enemy[name_numbers];
    #var undeadKilled 0;
    ktrig OFF;
    #loop 1 $my[necromancer][conjure_undead] i {conjure undead;kill undead;rabies undead;corrode undead};
    kill $ogEnemy;
    unholy ground;
    #action {%* dealt the killing blow to Undead.} {
        #math undeadKilled {$undeadKilled + 1};
    } {1};
    #delay 10 {
        #if $mask[active] {#math undeadKilled {$undeadKilled * 2}};
        #${undeadKilled} preserve_remains;
        #unaction {%* dealt the killing blow to Undead.};
        ktrig ON;
    };
};

#alias {topup} {
    #echo {<dfa>-------- Restocking Reagents --------<088>};
    gs;
    go necro_reagent;
    #line oneshot #action {%sginseng:%d%sblack pearls:%d%sspider web:%d%sgoldenrod:%d} {
        #math ginseng {999 - %%2};
        #math black_pearls {999 - %%4};
        #math spider_web {999 - %%6};
        #math goldenrod {999 - %%8};
        #if $ginseng {buy $ginseng ginseng;};
        #if $black_pearls {buy $black_pearls black pearls;};
        #if $spider_web {buy $spider_web spider web;};
        #if $goldenrod {buy $goldenrod goldenrod;};
    };
    #line oneshot #action {%smandrake:%d%spine needles:%d%snightshade:%d%sbloodmoss:%d} {
        #math mandrake {999 - %%2};
        #math pine_needles {999 - %%4};
        #math nightshade {999 - %%6};
        #math bloodmoss {999 - %%8};
        #if $mandrake {buy $mandrake mandrake;};
        #if $pine_needles {buy $pine_needles pine needles;};
        #if $nightshade {buy $nightshade nightshade;};
    };
};

#ALIAS {power}
{
    #NOP %1;
    #UNVAR {my[necromancer][power]};
    #ACTION {^{\s+(.+?)\(\d+\):\s+(\d+)\s+\d+(\s+(.+?)\(\d+\):\s+(\d+).*|)}}
    {
        #VAR {my[necromancer][power][%%2]} {%%3};
        #VAR {my[necromancer][power][%%5]} {%%6};
        #IF {$my[necromancer][power][di/nocturnum] > 0}
        {
            #VAR {my[necromancer][power][diurnum]} {$my[necromancer][power][di/nocturnum]};
        };
    };
    #SEND {!power};
};

#ALIAS {powers}
{
    #NOP %1;
    #UNVAR {my[necromancer][power]};
    #ACTION {^{\s+(.+?)\(\d+\):\s+(\d+)\s+\d+(\s+(.+?)\(\d+\):\s+(\d+).*|)}}
    {
        #VAR {my[necromancer][power][%%2]} {%%3};
        #VAR {my[necromancer][power][%%5]} {%%6};
        #IF {$my[necromancer][power][di/nocturnum] > 0}
        {
            #VAR {my[necromancer][power][diurnum]} {$my[necromancer][power][di/nocturnum]};
        };
    };
    #SEND {!powers};
};

#ALIAS {.studyPower}
{
    #NOP %1;
    #IF {%2 > 100}
    {
        #SEND {!study %1 100};
        .studyPower {%1} {@fEval{%2-100}};
    };
    #ELSE
    {
        #SEND {!study %1 %2};
    };
};

#ALIAS {.study}
{
    #NOP %1;
    #IF {"%0" == "default"}
    {
        #VAR {my[necromancer][powerdefaults]} {$my[necromancer][power]};
        #ECHO {Necromancer power defaults set:};
        #VAR {my[necromancer][powerdefaults]};
    };
    #ELSEIF {"%0" != ""}
    {
        #ECHO {.study                   - study missing powers};
        #ECHO {.study default           - set the default powers};
        #ECHO {.study <power> <amount>  - Study that power the given number of times};
    };
    #ELSE
    {
        #IF {"${my[necromancer][powerdefaults]}" === ""}
        {
            .study help
        };
        #ELSE
        {
            #FOREACH {*my[necromancer][powerdefaults][]} {_necStudy[power]}
            {
                #IF {"${my[necromancer][power][$_necStudy[power]]}" === ""}
                {
                    #VAR {_necStudy[count]} {$my[necromancer][powerdefaults][$_necStudy[power]]};
                };
                #ELSE
                {
                    #MATH {_necStudy[count]} {$my[necromancer][powerdefaults][$_necStudy[power]] - $my[necromancer][power][$_necStudy[power]]};
                };
                #VAR {_necStudy[$_necStudy[count]][$_necStudy[power]]} {};
            };
            #UNVAR {_necStudy[count]};
            #UNVAR {_necStudy[power]};
            #UNVAR {_necStudy[0]};
            #IF {&_necStudy[] > 0}
            {
                #FOREACH {*_necStudy[]} {v}
                {
                    #WHILE {"*_necStudy[$v][-1]" != ""}
                    {
                        .studyPower {*_necStudy[$v][-1]} {$v};
                        #UNVAR {_necStudy[$v][-1]};
                    };
                };
            };
        };
        #UNVAR {_necStudy};
    };  
};



#class {guild_aliases} {close}
