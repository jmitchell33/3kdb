#class {common_hpbar} {kill}
#class {common_hpbar} {open}

#alias {_update_status} {
    _update_health;
};

#alias {tickhp} {
    #TICKER {update_status} {
        #math {idle} {$idle + 1};
		#math {deadManTimeLeft} {$deadManTimeLeft - 1};
        _update_idle;
		_update_server;
    } {1};
    #TICKER {heartbeat} {
		#if !$idle_flag {
			_player_miphp;
			_player_heartbeat;
			_guild_heartbeat;
			_common_heartbeat;
			_update_corpse_string;
			_update_fight_status;
			_strategy_heartbeat;
			#if {$eternal} {_update_eternal_status};
			#if {$guild_miphp} {_guild_miphp};
		};
		
		#var action_round $mip[round];
		#if $draw[initiated] {
			#if {"$draw[hpbar][active]" == "on"} {draw_hpbar};
			#if {"$draw[ticker][active]" == "on"} {draw_ticker};
		};
    } {2};
};

#alias {_update_fight_status} {
	#var mob_string[name] $enemy[name];
	#var mob_string[round] $mip[round];
	#var mob_string[affects] {};
	#if $mob[enrage] {#cat mob_string[affects] {Enraged}};
	#if $mob[noxious-cloud] {#cat mob_string[affects] {Nox. Cloud}};
	#if $incombat {
		#var fight_string <ffb>Round $mip[round] vs. $enemy[name]<088>;
	} {
		#var fight_string <dfc> === NOT IN COMBAT === <edb>(Last: $enemy[last][name])<088>;
	};	
};

#alias {_update_server} {
	#format {reboot_cap}	{%+5s}	{$session[reboot]};
	#format {uptime_cap}	{%+5s}	{$session[uptime]};
	#format {lag_cap}		{%+4s}	{$session[lag]};
	#var server_string {<fff>Uptime: <aff>$session[uptime] <fff>Reboot: <aff>$session[reboot] <fff>Lag: <aff>$session[lag] <088>};
};

#alias {_update_idle} {
	#math   {idle_hr}       {$idle / 3600};
	#math   {idle_min}      {$idle % 3600 / 60};
	#math   {idle_sec}      {$idle % 60};
	#if     {$idle_hr < 10} {#var idle_hr  0$idle_hr};
	#if     {$idle_min < 10}{#var idle_min 0$idle_min};
	#if     {$idle_sec < 10}{#var idle_sec 0$idle_sec};
	#format {idle_cap}      {%+4s}  {<268>[<128>$idle_hr<268>:<128>$idle_min<268>:<128>$idle_sec<268>]<088>};

	#math   {deadManTimeLeft_hr}       {$deadManTimeLeft / 3600};
	#math   {deadManTimeLeft_min}      {$deadManTimeLeft % 3600 / 60};
	#math   {deadManTimeLeft_sec}      {$deadManTimeLeft % 60};
	#if     {$deadManTimeLeft_hr < 10} {#var deadManTimeLeft_hr  0$deadManTimeLeft_hr};
	#if     {$deadManTimeLeft_min < 10}{#var deadManTimeLeft_min 0$deadManTimeLeft_min};
	#if     {$deadManTimeLeft_sec < 10}{#var deadManTimeLeft_sec 0$deadManTimeLeft_sec};
	#format {deadManTimeLeft_cap}      {%+4s}  {<268>[<128>$deadManTimeLeft_hr<268>:<128>$deadManTimeLeft_min<268>:<128>$deadManTimeLeft_sec<268>]<088>};
};

#alias {_update_health} {
    #var	{my[hp][graph]}		{@graph{$my[hp][current];${my[hp][max]}}};
	#var	{my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var	{my[gp1][graph]}	{@graph{$my[gp1][current];$my[gp1][max]}};
	#var	{my[gp2][graph]}	{@graph{$my[gp2][current];$my[gp2][max]}};
	#var	{enemy[graph]}		{@graph{$enemy[hp];100}};
	#format {hp}			{%+4s} {$my[hp][current]};
	#format {hp_max}		{%+4s} {$my[hp][max]};
	#format {sp}			{%+4s} {$my[sp][current]};
	#format {sp_max}		{%+4s} {$my[sp][max]};
	#format {gp1}			{%+4s} {$my[gp1][current]};
	#format {gp1_max}		{%+4s} {$my[gp1][max]};
	#format {gp2}			{%+4s} {$my[gp2][current]};
	#format {gp2_max}		{%+4s} {$my[gp2][max]};
	#format {ehealth}		{%+7s} {$enemy[hp]%};
};



#class {common_hpbar} {close}
