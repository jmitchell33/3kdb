#alias common_corpse kill;
#class common_corpse open;

#NOP This variable determines whether or not to fire corpse_trig;
#var corpsetrigStatus 1;

#NOP This variable determines to add a custom action if the user enters it 2x with corpsetrig+;
#var tempCorpseActionToggle 1;

#NOP This variable determines whether to fire on user killing blow or any killing blow;
#NOP by default it is set to any killing blow;
#var corpsetrigKB 0;

#alias formatItem {
    #format result {<acf>%+10s  %s<088>} {%1} {%2};
    #echo { $result};
};

#NOP -- This section handles the corpsetrig actions and responding to mud output;

#NOP -- We don't want to track a KB on certain deaths, like a mage summon;
#alias _kbCheckIgnore {
    #switch {"$deathReport[mob_killed]"} {
        #case {"Celestial Lion"} {#var kbIgnore 1};
        #case {"Undead Wraith"} {#var kbIgnore 1};
        #case {"Shadow Panther"} {#var kbIgnore 1};
        #case {"Something"} {#var kbIgnore 1};
    };
};

#NOP -- We don't want to track a KB on certain killers, like the mob we're fighting;
#alias _killerCheckIgnore {
    #format tmpName {%l} $deathReport[mob_killer];
    #regex {$tmpName} {$enemy[target]} {#var fakeKill 1};
};

#NOP -- The next line after this will have the killing blow message, which we'll capture as well;
#action {%* {screeches in agony and falls to the ground, dead|gasps for breath, then slumps into death|gurgles in his own blood as he dies|gurgles in her own blood as she dies|gurgles in its own blood as it dies}.} {
    #NOP -- Set this to NA here and it will be picked up if the killer comes through on the next line;
    #var deathReport[mob_killer] NA;
    #var deathReport[mob_killed] %1;
    #var kbIgnore 0;
    #var fakeKill 0;
    _kbCheckIgnore;
    #if !$kbIgnore {
        #line oneshot #action {^%* dealt the killing blow to %*.} {
            #var deathReport[mob_killer] %%1;
            _killerCheckIgnore;
        };

        #if !$fakeKill {
            #if {$corpsetrigKB} {
                #if {"$deathReport[mob_killer]" == "$user_cap"} {corpse_trig}
            } {
                corpse_trig
            };
            update_xp;
            update_coins;
            #NOP -- Clean up other tracking from modules/dmgtracker.tin and common/status.tin;
            #if $dmgtracker {dmg_mod_reset;#var cmbt[affects][convoke] 0};

            #var deathReport[mob_killed] %1;
            #var deathReport[mob_rounds_to_kill] $mip[round];
            #var deathReport[damage_dealt] 0;
            #var deathReport[corpses_used] $mob[corpses_used];
            #var deathReport[summons_killed] $mob[summons_killed];

            mob_status_clear;
            
            #NOP -- Small delay to make sure we get the variables from the updates;
            #delay 1 {
                #var deathReport[xp_earned] $fight_xp;
                #var deathReport[coins_earned] $fight_coins;

                #list deathSummary add {{
                    {mob} {$deathReport[mob_killed]}
                    {killer} {$deathReport[mob_killer]}
                    {rounds} {$deathReport[mob_rounds_to_kill]}
                    {xp_earned} {$deathReport[xp_earned]}
                    {damage_dealt} {$deathReport[damage_dealt]}
                    {coins_earned} {$deathReport[coins_earned]}
                    {corpses_used} {$deathReport[corpses_used]}
                    {summons_killed} {$deathReport[summons_killed]}
                }};
            };
        };
    };

    #if $bot[active] {#showme {----- BOT REGISTERED KILL -----}};
} {1};



#NOP -- This section manages the corpsetrig aliases and moving items in the actual corpsetrig;
#alias corpsetrig {
    #echo {<ffb>   Current Corpse Trigger Actions   <088>\n};
    #if {&corpseActions[] > 0} {
        formatItem {Priority:} {Name};
        #loop 1 &corpseActions[] item {
            formatItem {<afc>$item:} {<efe>$corpseActions[$item][name]<088>};
        };
        #echo {\n <dfa>corpse_trig<088> will execute the corpsetrig actions.};
        #echo { <dfa>corpsetrig-help <088> to see all available commands.};
    } {
        #echo { There are currently no actions added to corpse_trig};
        #echo {\n <efa>corpsetrig+<088> <bcc>name<088> to add an action};
        #echo { <efa>corpsetrig-<088> <bcc>name/number<088> to remove an action};
        #echo { <efa>corpsetrig-all<088> to see available actions};
        #echo { If the action doesn't exist, it will be added};
    };
};

#alias corpsetrig-clear {
    #list corpseActions clear;
    #echo {<caa>----  <fff> corpsetrig has been cleared <caa>  ----<088>};
};


#alias corpsetrig+ {
    #if {"%0" != ""} {
        #list corpseList {find} {%0} {tempListIndex};
        #var tempList $corpseList[+$tempListIndex];
        #if {&tempList[] == 0} {
            #list corpseActions indexate name;
            #list corpseActions {find} {%0} {tempListIndex};
            #var tempList $corpseList[+$tempListIndex];
        };
        #if {&tempList[] > 0} {
            #NOP -- If the corpseActions list exists, check if the selected action is a member and toggle it;
            #NOP -- Otherwise, if there is no corpseActions list, we add it;
            #if {&corpseActions[] > 0} {
                #list corpseActions indexate name;
                #list corpseActions {find} {%0} {itemExists};
                #if {$itemExists} {
                    #echo {<caa>----  <fff> %0 is already in the <fff>corpse_trig <caa>  ----<088>};
                } {
                    #list corpseActions add {{{name} {$tempList[name]} {action} {$tempList[action]} {active} {1}}};
                    #echo {<caa>----  <fff> %0 has been <bfd>added<088> to <fff>corpse_trig  <caa>  ----<088>};
                };
            } {
                #list corpseActions add {{{name} {$tempList[name]} {action} {$tempList[action]} {active} {1}}};
                #echo {<caa>----  <fff> %0 has been <bfd>added<088> to <fff>corpse_trig  <caa>  ----<088>};
            };
        } {
            #if $tempCorpseActionToggle {
                #delay 10 {#var tempCorpseActionToggle 1};
                #var tempCorpseActionToggle 0;
                #var tempCorpseAction %0;
                #echo { <caa>----  <fff> %0 not found in corpsetrig List.  <caa>  ----<088>};
                #echo { <caa>----  <fff> If this was not a typo and you wish to add this action, repeat the entry.  <caa>  ----<088>};
            } {
                #if {"$tempCorpseAction" == "%0"} {
                    #var tempCorpseActionToggle 1;
                    #echo { <caa>----  <fff> %0 has been added as an action.  <caa>  ----<088>};
                    #list corpseActions add {{{name} {%0} {action} {%0} {active} {1}}};
                } {
                    #delay 10 {#var tempCorpseActionToggle 1};
                    #var tempCorpseActionToggle 0;
                    #var tempCorpseAction %0;
                    #echo { <caa>----  <fff> %0 not found in corpsetrig List.  <caa>  ----<088>};
                    #echo { <caa>----  <fff> If this was not a typo and you wish to add this action, repeat the entry.  <caa>  ----<088>};
                };
            }
        };
    };
};
        
#alias corpsetrig- {
    #var useIndex 0;
    #if {"%0" != ""} {
        #regex {%0} {^%+1..2d$} {#var tempListIndex %0;#var useIndex 1};
        #if $useIndex {
            #echo {<caa>----  <fff> $corpseActions[+$tempListIndex][name] has been <baa>removed<088> from <fff>corpse_trig <caa>  ----<088>};
            #list corpseActions delete %0;
            #list corpseActions indexate name;
        } {
            #list corpseActions indexate name;
            #list corpseList {find} {%0} {tempListIndex};
            #var tempList $corpseList[+$tempListIndex];
            #if {&tempList[] == 0} {
                #list corpseActions {find} {%0} {tempListIndex};
                #var tempList $corpseList[+$tempListIndex];
            };
            #if {&tempList[] > 0} {
                #if {&corpseActions[] > 0} {
                    #list corpseActions {find} {%0} {itemExists};
                    #if {$itemExists} {
                        #echo {<caa>----  <fff> %0 has been <baa>removed<088> from <fff>corpse_trig <caa>  ----<088>};
                        #list corpseActions filter {} {%0};
                    } {
                        #echo {<caa>----  <fff> %0 not found in <fff>corpse_trig  <caa>  ----<088>};
                    };
                }
            } {
                #echo {<caa>----  <fff> There are no actions currently in corpse_trig<caa>  ----<088>};
            };
            #list corpseActions indexate name;
        };
    };
};


#alias corpsetrig-help {
    #echo { ================ <dfa>3kdb CORPSE TRIGGER <088> ================ };
    #echo {\n<faa>Usage:<088> };
    #echo { <efa>corpse_trig<088> will execute the corpsetrig actions.};
    #echo {\n<faa>Adding, Removing, and Moving Actions:<088> };
    #echo { <efa>corpsetrig-all<088> to see available actions};
    #echo {\n <efa>corpsetrig+<088> <bcc>name<088> to add an action};
    #echo { <efa>corpsetrig-<088> <bcc>name/number<088> to remove an action};
    #echo { <efa>corpsetrig-clear<088> to clear corpsetrig};
    #echo {\n <efa>corpsetrig++<088> <bcc>name<088> to <efc>increase<088> an action's priority};
    #echo { <efa>corpsetrig--<088> <bcc>name<088> to <fac>decrease<088> an action's priority};
    #echo {\n<faa>Modes:<088> };
    #echo { <efa>corpsetrig-kb<088> to toggle corpsetrig for $user_cap killing blows};
    #echo { <efa>corpsetrig-off<088> to turn off the corpsetrig};
    #echo { <efa>corpsetrig-on<088> to turn on the corpsetrig};
};

#alias corpsetrig++ {
    #if {"%0" != ""} {
        #var foundItem 0;
        #list corpseActions indexate name;
        #list corpseActions find {%0} {foundItem};
        #if {$foundItem == 0} {
            #echo { <bba>$foundItem[name] was not found in the corpsetrig actions<088>};
        };
        #if {$foundItem != 0 && $foundItem > 1} {
            #math swapItem {$foundItem - 1};
            #list corpseActions swap $foundItem $swapItem;
            #echo { <efc>$foundItem[name] priority has been increased by 1<088>};
        } {
            #echo { <bba>$foundItem[name] priority is already the first item to trigger<088>};
        };
    } {
        #echo {<fac>  No corpsetrig name provided.<088>};
    };
};


#alias corpsetrig-- {
    #if {"%0" != ""} {
        #var foundItem 0;
        #list corpseActions indexate name;
        #list corpseActions find {%0} {foundItem};
        #if {$foundItem == 0} {
            #echo { <bba>$foundItem[name] was not found in the corpsetrig actions<088>};
        };
        #if {$foundItem != &corpseActions[]} {
            #if {$foundItem != 0 && $foundItem >= 1} {
                #math swapItem {$foundItem + 1};
                #list corpseActions swap $foundItem $swapItem;
                #echo { <efc>$foundItem[name] priority has been decreased by 1<088>};
            };
        } {
            #echo { <bba>$corpseActions[$foundItem][name] priority is already the last item<088>};
        };
    } {
        #echo {<fac>  No corpsetrig name provided.<088>};
    };
};

#alias corpsetrig-kb {
    #if $corpsetrigKB {
        #echo { <bba>corpse_trig will fire on all killing blows<088>};
        #var corpsetrigKB 0;
    } {
        #echo { <bba>corpse_trig will only fire on $user killing blow<088>};
        #var corpsetrigKB 1;
    };
};

#alias corpsetrig-on {
    #var corpsetrigStatus 1;
    #echo { <bba>corpse_trig is now on<088>};
};

#alias corpsetrig-off {
    #var corpsetrigStatus 0;
    #echo { <bba>corpse_trig is now off<088>};
};


#alias {corpsetrig-all} {
    #echo {\n<ffb>   Current Corpse Trigger Actions   <088>};
    #if {&corpseActions[] > 0} {
        #loop 1 &corpseActions[] item {
            #echo {   <afc>$item: <efe> $corpseActions[$item][name]   <088>};
        };
    } {
        #echo {<fac>             None              <088>};
    };
    #var inactiveItems ${corpseList};
    #list inactiveItems indexate name;
    #if {&corpseActions[] > 0} {
        #foreach $corpseActions[%*] active {
            #list inactiveItems filter {} {$active[name]};
        };
    };
    #if {&inactiveItems[] > 0} {
        #echo {\n<ffb>   Available Options   <088>};
        formatItem {Name} {Description};
        #foreach $inactiveItems[%*] index {
            #if {"$index[guild]" == "all" || "$index[guild]" == "$guild"} {
                formatItem {$index[name]} {<cba>$index[description]<088>};
            };
        };
    };
    #echo { \n <efa>corpsetrig+<088> <bcc>action<088> to add or remove an action};
    #echo { \n <efa>corpsetrig-<088> <bcc>action/#<088> to remove an action};
    #echo { <efa>corpsetrig-all<088> to see available actions};
    #echo { If the action doesn't exist, it will be added};
};


#list corpseList clear;
#list corpseList add {{{name} {ted} {guild} {all} {action} {love bear;cuddle bear} {active} {0} {description} {Love & cuddle freeway bear}}};
#list corpseList add {{{name} {bRemains} {guild} {all} {action} {burn remains} {active} {0} {description} {burn priest remains in Necropolis}}};
#list corpseList add {{{name} {aoe} {guild} {all} {action} {immolate corpse} {active} {0} {description} {AOE Armor: Immolate Corpse}}};
#list corpseList add {{{name} {divvy} {guild} {all} {action} {divvy gold} {active} {0} {description} {Gold: Divvy gold}}};
#list corpseList add {{{name} {coins} {guild} {all} {action} {get coins from corpse;get coins} {active} {0} {description} {Gold: Get coins from corpse}}};
#list corpseList add {{{name} {delay} {guild} {all} {action} {#NOP} {active} {0} {description} {2 Second Delay}}};
#list corpseList add {{{name} {wrap} {guild} {all} {action} {wrap remains}  {active} {0} {description} {Coffin: Wrap Corpse}}};
#list corpseList add {{{name} {slab} {guild} {all} {action} {slab remains}  {active} {0} {description} {Freezer: Slab Corpse}}};
#list corpseList add {{{name} {szCaps} {guild} {all} {action} {eat blue capsule;eat orange capsule}  {active} {0} {description} {SZ: Eat Blue/Orange Capsules}}};
#list corpseList add {{{name} {szGreenCap} {guild} {all} {action} {eat green capsule}  {active} {0} {description} {SZ: Eat Green Capsule}}};
#list corpseList add {{{name} {crafting} {guild} {all} {action} {stash all;keep all component}  {active} {0} {description} {Crafting: Stash All & Keep All Components}}};
#list corpseList add {{{name} {getAll} {guild} {all} {action} {get all}  {active} {0} {description} {Get all}}};
#list corpseList add {{{name} {collector} {guild} {all} {action} {#loop 10 1 i {put all in bag $i}}  {active} {0} {description} {Collector: Put all in bags (10 bags)}}};
#list corpseList add {{{name} {hoarder} {guild} {all} {action} {#loop 20 1 i {put all in bag $i}}  {active} {0} {description} {Hoarder: Put all in bags (20 bags)}}};
#list corpseList add {{{name} {spoon} {guild} {all} {action} {eat corpse}  {active} {0} {description} {Spoon: Eat Corpse}}};
#list corpseList add {{{name} {cocoon} {guild} {all} {action} {fuse 100}  {active} {0} {description} {Cocoon: Fuse 100hps}}};
#list corpseList add {{{name} {dirge} {guild} {bard} {action} {perform dirge}  {active} {0} {description} {Bard: Perform Dirge}}};
#list corpseList add {{{name} {gtRepair} {guild} {gentech} {action} {gt-repair} {active} {0} {description} {Gentech: Repair/Stabilize/Tactical}}};
#list corpseList add {{{name} {deener} {guild} {juggernaut} {action} {deener}  {active} {0} {description} {Juggernaut: Deener}}};
#list corpseList add {{{name} {fdeener} {guild} {juggernaut} {action} {fdeener}  {active} {0} {description} {Juggernaut: Fdeener 1x}}};
#list corpseList add {{{name} {fdeener2} {guild} {juggernaut} {action} {fdeener;fdeener}  {active} {0} {description} {Juggernaut: Fdeener 2x }}};
#list corpseList add {{{name} {cdrain} {guild} {elemental} {action} {evoke corpse drain}  {active} {0} {description} {Elemental: Corpse Drain}}};
#list corpseList add {{{name} {mDepletion} {guild} {elemental} {action} {evoke mental depletion on corpse} {active} {0} {description} {Elemental: Mental Depletion}}};
#list corpseList add {{{name} {preserve} {guild} {necromancer} {action} {qtrance preserve remains/get remains/keep all preservation}  {active} {0} {description} {Necro: Preserve Remains}}};
#list corpseList add {{{name} {absorbSp} {guild} {necromancer} {action} {absorb} {active} {0} {description} {Necro: Absorb Corpse for SP}}};
#list corpseList add {{{name} {absorbSp2} {guild} {necromancer} {action} {qtrance absorb/absorb} {active} {0} {description} {Necro: Absorb Corpse for SP 2x}}};
#list corpseList add {{{name} {conWorth} {guild} {necromancer} {action} {con} {active} {0} {description} {Necro: Contribute Coins for Worth}}};
#list corpseList add {{{name} {reinforce} {guild} {necromancer} {action} {reinforce all} {active} {0} {description} {Necro: Reinforce/Repair Armour}}};
#list corpseList add {{{name} {cBlast} {guild} {mage} {action} {cast corpse blast}  {active} {0} {description} {Mage: Corpse Blast}}};
#list corpseList add {{{name} {cBlast2} {guild} {mage} {action} {cast corpse blast;cast corpse blast} {active} {0} {description} {Mage: Corpse Blast 2x}}};
#list corpseList add {{{name} {spelltap} {guild} {mage} {action} {cast spell tap on corpse}  {active} {0} {description} {Mage: Spell Tap}}};
#list corpseList add {{{name} {anchor} {guild} {mage} {action} {#if !$incombat {cast dispel magic}}  {active} {0} {description} {Mage: Dispel Magic (remove anchor)}}};
#list corpseList add {{{name} {spellbook} {guild} {mage} {action} {study spellbook}  {active} {0} {description} {Mage: Study Spellbook}}};
#list corpseList add {{{name} {pPocket} {guild} {mage} {action} {put all in pocket} {active} {0} {description} {Mage: put all items in deeppocket}}};
#list corpseList add {{{name} {fremcorpse} {guild} {fremen} {action} {fremCorpse} {active} {0} {description} {Fremen: fai & reclaim (Threshold is half your max gp1)}}};
#list corpseList add {{{name} {fai} {guild} {fremen} {action} {fai} {active} {0} {description} {Fremen: Donate water from a corpse back to guild}}};
#list corpseList add {{{name} {reclaim} {guild} {fremen} {action} {reclaim} {active} {0} {description} {Fremen: Recover water from a corpse}}};
#list corpseList add {{{name} {hide} {guild} {fremen} {action} {hide} {active} {0} {description} {Fremen: Hide in the shadows before ambushing mob}}};
#list corpseList add {{{name} {poison} {guild} {fremen} {action} {poison} {active} {0} {description} {Fremen: Add poison to your weapon}}};
#list corpseList indexate name;


#alias corpse_trig {
    #if $corpsetrigStatus {
        #if {&corpseActions[] > 0} {
            #loop 1 &corpseActions[] item {
                #if {"$corpseActions[$item][name]" == "delay"} {
                    #if {$bot[active]} {
                        #NOP -- If the bot has already been paused, note that and don't unpause automatically after delay;
                        #if $bot[paused] {#var pauseCorpseActionBot 1} {#var pauseCorpseActionBot 0};
                        .pause
                    };
                    #var pauseCorpseAction 1;
                    #var lastItem $item;
                    #math nextItem {$item + 1};
                    #break;
                } {
                    $corpseActions[$item][action];
                };
            };
            #if {$pauseCorpseAction} {
                #delay 2 {
                    #loop $nextItem &corpseActions[] item {
                        $corpseActions[$item][action];
                        #var pauseCorpseAction 0;
                    };
                    #if {$bot[active]} {
                        #if !$pauseCorpseActionBot {.unpause};
                        .bot
                    };
                };
            };
        };
    };
};


#class common_corpse close;