#class rej_rotate open

#NOP Vnums are 27662-28934 30131-30174;
#alias {rrotate} {
	#NOP Update the color;
	#if {"$rejected_game[color]" == "green"} {#var rej_color <228>};
	#if {"$rejected_game[color]" == "blue"} {#var rej_color <148>};
	#if {"$rejected_game[color]" == "red"} {#var rej_color <218>};
	#if {"$rejected_game[color]" == "magenta"} {#var rej_color <258>};

	#loop 27662 30174 cnt {
		#map get {roomarea} {rarea} {$cnt};
		#if {"$rarea" == "The Rejected Game"} {
			#NOP Set new rotation roomcolor;
			#map at $cnt {#map set roomcolor $rej_color};

			#NOP Get rexits;
			#map at $cnt {#map get roomexits rexits};

			#NOP Reset new room exits array for each vnum;
			#var nrexits {};

			#NOP loop through exits and rotate 90Â°;
			#foreach {*rexits[]} {rexit} {
				#NOP Reset keep exit variable for non-rotatable exits;
				#var kexit no;
				#NOP Set vnum or new room exit;
				#switch {"$rexit"} {
					#case {"n"}	{#var nrexits[e]  $rexits[n]};
					#case {"e"}	{#var nrexits[s]  $rexits[e]};
					#case {"s"}	{#var nrexits[w]  $rexits[s]};
					#case {"w"}	{#var nrexits[n]  $rexits[w]};
					#case {"ne"}	{#var nrexits[se] $rexits[ne]};
					#case {"se"}	{#var nrexits[sw] $rexits[se]};
					#case {"sw"}	{#var nrexits[nw] $rexits[sw]};
					#case {"nw"}	{#var nrexits[ne] $rexits[nw]};
					#default	{#var kexit yes}
				};
				#NOP Check if non-rotatable exit to keep;
				#if {"$kexit" == "no"} {
					#NOP Unlink old direction;
					#map at $cnt {#map unlink $rexit}
				}
			};
			#NOP Link new directions;
			#foreach {*nrexits[]} {rexit} {
				#map at $cnt {#map link $rexit $nrexits[$rexit]}
			}
		}
	};
}


#class rej_rotate close