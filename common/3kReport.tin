#class 3kReport kill;
#class 3kReport open;

#alias update_xp {
    #if {"%1" == "start"} {
        #action {^You have %* total xp.$} {
            #if {$bot[active]} {
                #math bot[stats][xp] 0;
                #math bot[stats][loop][xp] 0;
            };
            #format my[xp] {%d} {%%1};
            #unaction {^You have %* total xp.$};
        } {2};
        xp;
        #if {"$draw[status][active]" == "on"} {#delay 2 {draw_caption_status}};
    } {
        #if {$bot[active]} {
            #math bot[stats][loop][mobs] {$bot[stats][loop][mobs] + 1};
            #math bot[stats][mobs] {$bot[stats][mobs] + 1};
        };
        
        #action {^You have %* total xp.$} {
            #format temp_xp {%d} {%%1};
            #if {$my[xp] > 0 && "$temp_exp" != "$my[xp]"} {
                #if {$temp_xp > $my[xp]} {
                    #math fight_xp {$temp_xp - $my[xp]};
                    #if {$bot[active]} {
                        #math bot[stats][xp] {$bot[stats][xp] + $fight_xp};
                        #math bot[stats][loop][xp] {$bot[stats][loop][xp] + $fight_xp};
                    };
                    #format my[xp] {%d} {%%1};
                } {
                    #NOP -- If current xp is less than total xp (spent it on stats or died) update my[xp] to reflect the new baseline;
                    #format my[xp] {%d} {%%1}; 
                }
            } {
                #format my[xp] {%d} {%%1};
            };
            #unaction {^You have %* total xp.$};
        };
        xp;
        #if {"$draw[status][active]" == "on"} {#delay 2 {draw_caption_status}};
    };
};

#alias update_coins {
    #NOP -- If the coins don't increase, we know we're down or there's another change making a measurement unreliable;
    #var fight_coins 0;
    #action {^You are carrying %d coins in loose change.$} {
        #var temp_coins %%1;
        #if {$my[coins] > 0 && "$temp_coins" != "$my[coins]"} {
            #if {$temp_coins > $my[coins]} {
                #math fight_coins {$temp_coins - $my[coins]};
                #if {$bot[active]} {
                    #math bot[stats][coins] {$bot[stats][coins] + $fight_coins};
                    #math bot[stats][loop][coins] {$bot[stats][loop][coins] + $fight_coins};
                };
                #format my[coins] {%d} {%%1};
            } {
                #NOP -- If current coins are less than starting coins, we'll update the new baseline;
                #format my[coins] {%d} {%%1}; 
            };
        } {
            #format my[coins] {%d} {%%1};
        };
        #unaction {^You are carrying %d coins in loose change.$};
    };
    coins;
};

#alias _reportLine {
    #echo {-------------------------------------------------------------------------------------------};
};

#alias _reportHeader {
    #echo {<eef>   -=+=-  -=+=-  -=+=-  -=+=-<088>           <eaa>3k KILL REPORT           <eef>-=+=-  -=+=-  -=+=-  -=+=-<088>};
};

#alias 3kReport-clear {
    #unvar deathSummary;
    #echo {<eef>   -=+=-  -=+=-  -=+=-  -=+=-<088>      <eaa>3k KILL REPORT CLEARED          <eef>-=+=-  -=+=-  -=+=-  -=+=-<088>};
};

#alias 3kReport {
    #NOP -- If a # is provided, show the last # of kills - otherwise show the entire list;
    #list deathSummary size tempReportSize;
    #regex {%1} {%d} {
        #math tempReportStart {$tempReportSize - %1};
        #if {%1 > $tempReportSize} {
            #format tmpTotalKills {%g} {$tempReportSize}
        } {
            #format tmpTotalKills {%g} {%1}
        };
    } {
        #var tempReportStart 1;
        #format tmpTotalKills {%g} {$tempReportSize}
    };
    _reportHeader;
    #format reportLine {%-15s %-15s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-7s} {Killer} {Mob} {} {Rounds} {} {XP} {} {Coins} {} {Dmg} {} {Corpses};
    #echo { <dff>$reportLine<088>};
    #var tmpTotalXp 0;
    #var tmpTotalRnds 0;
    #var tmpTotalDmg 0;
    #var tmpTotalCoins 0;
    #var tmpTotalCorpses 0;

    #var tmpPerMobXp 0;
    #var tmpPerMobRnds 0;
    #var tmpPerMobDmg 0;
    #var tmpPerMobCoins 0;
    #var tmpPerMobCorpses 0;

    #loop $tempReportStart $tempReportSize item {
        #math tmpTotalXp {$deathSummary[$item][xp_earned] + $tmpTotalXp};
        #math tmpTotalRnds {$deathSummary[$item][rounds] + $tmpTotalRnds};
        #math tmpTotalDmg {$deathSummary[$item][damage_dealt] + $tmpTotalDmg};
        #math tmpTotalCoins {$deathSummary[$item][coins] + $tmpTotalCoins};
        #math tmpTotalCorpses {$deathSummary[$item][corpses_used] + $tmpTotalCorpses};
        #format tmpMob {%.15s} {$deathSummary[$item][mob]};
        #format tmpKiller {%.15s} {$deathSummary[$item][killer]};
        #format tmpXP {%M} {$deathSummary[$item][xp_earned]};
        #format tmpCoins {%g} {$deathSummary[$item][coins_earned]};
        #format tmpDmg {%g} {$deathSummary[$item][damage_dealt]};
        #format tmpRounds {%g} {$deathSummary[$item][rounds]};
        #format tmpCorpses {%g} {$deathSummary[$item][corpses_used]};
        
        #if {$tmpCoins == 0} {#var tmpCoins -};
        #if {$deathSummary[$item][damage_dealt] == 0} {#var tmpDmg -};
        #if {$deathSummary[$item][corpses_used] == 0} {#var tmpCorpses -};
        #format reportLine {%-15s %-15s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-7s} {$tmpKiller} {$tmpMob} {} {$tmpRounds} {} {$tmpXP} {} {$tmpCoins} {} {$tmpDmg} {} {$tmpCorpses};
        #echo { <eed>$reportLine<088>};
    };
    #math tmpPerMobCoins {$tmpTotalCoins / $tmpTotalKills};
    #math tmpPerMobDmg {$tmpTotalDmg / $tmpTotalKills};
    #math tmpPerMobRnds {$tmpTotalRnds / $tmpTotalKills * 1.0};
    #math tmpPerMobXp {$tmpTotalXp / $tmpTotalKills};
    #math tmpPerMobCorpses {$tmpTotalCorpses / $tmpTotalKills * 1.0};

    #format tmpPerMobXp {%M} $tmpPerMobXp;
    #replace tmpPerMobXp {G} {B};
    #format tmpPerMobRnds {%g} $tmpPerMobRnds;
    #format tmpPerMobDmg {%g} $tmpPerMobDmg;
    #replace tmpPerMobDmg {G} {B};
    #format tmpPerMobCoins {%g} $tmpPerMobCoins;

    #format tmpTotalXp {%M} $tmpTotalXp;
    #replace tmpTotalXp {G} {B};
    #format tmpTotalRnds {%g} $tmpTotalRnds;
    #format tmpTotalDmg {%g} $tmpTotalDmg;
    #replace tmpTotalDmg {G} {B};
    #format tmpTotalCoins {%g} $tmpTotalCoins;

    _reportLine;
    #format reportLine {%-15s %-15s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-7s} {TOTAL KILLS} {$tmpTotalKills} {} {$tmpTotalRnds} {} {$tmpTotalXp} {} {$tmpTotalCoins} {} {$tmpTotalDmg} {} {$tmpTotalCorpses};
    #echo { <eab>$reportLine<088>};
    #format reportLine {%-15s %-15s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-6s %+3s %-7s}  {PER MOB} {} {} {$tmpPerMobRnds} {} {$tmpPerMobXp} {} {$tmpPerMobCoins} {} {$tmpPerMobDmg} {} {$tmpPerMobCorpses};
    #echo { <eed>$reportLine<088>};
    _reportLine;
    _reportHeader;
};

#class 3kReport close;