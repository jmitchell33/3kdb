#class {eval} kill
#class {eval} open

#NOP Offensive summary;
#NOP Level - This <> has God-Like knowledge and power
#NOP Damage This <> attacks with Immortal accuracy and power
#NOP Stun - This <> will anticipate every blow
#NOP Dodge/Dr - This <> has mystical defenses.
#NOP Fearable - this <> has the heart of a lion.




#var bardEval[cols] 28;
#var bardEval[Poor] 1;
#var bardEval[Fair] 2;
#var bardEval[Decent] 3;
#var bardEval[Average] 4;
#var bardEval[Great] 5;
#var bardEval[Superb] 6;
#var bardEval[Outstanding] 7;
#var bardEval[Heroic] 8;
#var bardEval[Godly] 9;
#var bardEval[Legendary] 10;
#var bardEval[Edged] <060>;
#var bardEval[Blunt] <170>;
#var bardEval[Fire] <110>;
#var bardEval[Ice] <140>;
#var bardEval[Acid] <120>;
#var bardEval[Electric] <130>;
#var bardEval[Mind] <050>;
#var bardEval[Energy] <150>;
#var bardEval[Poison] <020>;
#var bardEval[Radiation] <160>;


#alias {bardEvalPrint} {
  #format bardEvalType1Len {%L} {%1};
  #format bardEvalType2Len {%L} {%2};
  #math bardEvalType1fmt $bardEval[cols] - $bardEvalType1Len;
  #echo {$bardEval[%1]%1<170>%+${bardEvalType1fmt}s<100> | $bardEval[%2]%2<170>%+${bardEvalType2fmt}s} {$bardEval[$bardEval[mob][%1]] <170>\/ 10} {$bardEval[$bardEval[mob][%2]] <170>\/ 10};  #math bardEvalType2fmt $bardEval[cols] - $bardEvalType2Len;
  #send {say %1 $bardEval[$bardEval[mob][%1]] / 10  |  %2 $bardEval[$bardEval[mob][%2]] / 10};
};

#action {^You focus in on the thought waves of %*.} {
  #var bardEval[name] %1;
};

#action {^      - D E F E N S I V E   E V A L U A T I O N -} {
  #var bardEval[mob] {};
  #var bardEval[mob][name] $bardEval[name];
};

#action {^{Edged|Blunt|Fire|Ice|Acid|Electric|Mind|Energy|Poison|Radiation}%s: {Poor|Fair|Decent|Average|Great|Superb|Outstanding|Heroic|Godly|Legendary|Immune}} {
  #line gag;
  #var bardEval[mob][%1] %3;
};

#action {^This %+ is best defended against} {
  #NOP -- Report the Mob Eval to the room;
  #send {say ----------- $bardEval[mob][name] Evaluation -----------};
  bardEvalPrint {Edged} {Electric};
  bardEvalPrint {Blunt} {Mind};
  bardEvalPrint {Fire} {Energy};
  bardEvalPrint {Ice} {Poison};
  bardEvalPrint {Acid} {Radiation};
  #send {!say [EDGE] [BLUN] [HEAT] [COLD] [ACID] [ELEC] [PSI ] [ENER] [TOXI] [RADI]};
  #send {!say   $bardEval[mob][Edged]  $bardEval[mob][Blunt]  $bardEval[mob][Fire]  $bardEval[mob][Ice]  $bardEval[mob][Acid]  $bardEval[mob][Electric]  $bardEval[mob][Mind]  $bardEval[mob][Energy]  $bardEval[mob][Poison]  $bardEval[mob][Radiation]};
  

  #NOP #send {say Edged      : $bardEval[mob][Edged]};
  #NOP #send {say Blunt      : $bardEval[mob][Blunt]};
  #NOP #send {say Fire       : $bardEval[mob][Fire]};
  #NOP #send {say Ice        : $bardEval[mob][Ice]};
  #NOP #send {say Acid       : $bardEval[mob][Acid]};
  #NOP #send {say Electric   : $bardEval[mob][Electric]};
  #NOP #send {say Mind       : $bardEval[mob][Mind]};
  #NOP #send {say Energy     : $bardEval[mob][Energy]};
  #NOP #send {say Poison     : $bardEval[mob][Poison]};
  #NOP #send {say Radiation  : $bardEval[mob][Radiation]};    
};

#class {eval} close