#class {player_aliases} {kill}
#class {player_aliases} {open}

#list {temp} create {};

#ACTION {^%d:You will cast %w should your %w ever} {
     #list temp set %1 {%2};
};

#alias {useHeal} {
     #if {!$my[eternal][heal] && $my[hm][heal] && !$my[immersion][active]} {
          hmheal;
     };
     #if {$my[eternal][heal] && !$my[immersion][active]} {
          (heal oscar;
     };
};

#NOP -- Default corpse_trig;
#alias corpsetrig1 {
     corpsetrig-clear;
     corpsetrig+ spelltap;
     corpsetrig+ slab;
     corpsetrig+ wrap;
     corpsetrig+ cBlast;
     corpsetrig+ getAll;
     corpsetrig+ crafting;
     corpsetrig+ cocoon;
     corpsetrig+ spellbook;
};

#alias {_player_deadmanActions} {
    .pause;
};

#alias {setup_defense} {
     clear_gc;
     setup_gc;
     #delay 2 {prots_ss};
     #delay 4 {prots_MG};
     #delay 6 {prots_ms};
     #delay 8 {prots_armor};
     #delay 10 {prots_ps};
     #delay 12 {cast mantle};
     #delay 14 {prots_pfe};
};


#alias {setup_gc} {
     cast greater contingency as mantle#$mage[contingencies][mantle]#cast mantle;
     cast greater contingency as prismatic sphere#$mage[contingencies][sphere]#cast prismatic sphere;
     cast greater contingency as major globe#cast major globe;
     cast greater contingency as stoneskin#cast stoneskin;
     cast greater contingency as shield#cast magnificent shield;
     cast greater contingency as armor#cast armor;
     cast greater contingency as prot_evil#cast protection from evil;
};

#alias {clear_c} {
     #10 {cast remove contingency as 1};
};

#alias {clear_gc} {
     #10 {cast remove greater contingency as 1};
}

#alias {check_beads} {
     #math hp_overmax_max {$my[hp][max] * 5};
     #math hp_overmax_shortfall {$hp_overmax_max - $my[hp][current]};
     #math grasps_needed {$hp_overmax_shortfall / 33};

     #math sp_threshold {$my[sp][max] * .20};
     #math sp_extra {$my[sp][current] - $sp_threshold};
     #math grasps_possible {$sp_extra / 100};

     #if {$grasps_needed < $grasps_possible} {
          #var grasp_beads $grasps_needed;
     } {
          #var grasp_beads $grasps_possible;
     };

     #$grasp_beads {grasp beads};
};

#alias pmo {cast polymorph other on %0;};


#class {player_aliases} {close}