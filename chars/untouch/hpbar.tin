#class {knight} {open}

#var guild knight
#var gxn_last 0

/* Knight hpconfig setting */
#NOP hpconfig HP:#CHP#/#MHP# SP:#CSP#/#MSP# STM:#CST#/#MST# STN:#STN#% (#STL#) SW:#SEC#% | #SSN# #MTH##NLN#PPD(#PRE#) End(#END#) Cry(#CRY#) Dfl(#DFL#) Study(#STD#) Dodge(#DDG#) Brawl(#BRL#) Shield(#SHB#) Parry(#PRY#)#NLN#GXP: #GXP#(#G2N#) Joust:#JST# Last:#LFR# E:#MOB#

/* Aliases */
#alias {remount} {
        #send !callesquire;
        #send !esq fetch mount;
        #send !mount bela;
        #send !send away
}

#alias gs2 #send !skills
#alias gs3 #send !gkills
#alias info #send !knight

/* Trigs */
#act {^%w scurries over and hides behind you.} {!defend %1}

/* Joust */
#act {^You accept the challenge and you find yourself mounted on a horse with a lance.$} {mapgo jousts;#var {joust_dir} {n}}
#act {%w accepts your challenge.  You find yourself mounted on a horse with a lance.$} {mapgo joustn;#var {joust_dir} {n}}
#act {^Congratulations!  You've dismounted %w!  You move on to your next challenge...$} {mapgo challengeknight}
#act { %w has knocked you from your horse!$} {#map go 1974;mount bela}

#act {^You start the joust.$} {
	#if {"$joust_dir" == "n"} {
		mapgo joustn;
		#var {joust_dir} {s};
		s
	} {
		mapgo jousts;
		#var {joust_dir} {n};
		n
	}
}

#act {^It is your move.$} {
	#math {rand} {1d2};
	#map get {roomexits} {exits};


	#if {"$joust_dir" == "s"} {
		#regex {$exits} {s} {
			#switch {$rand} {
				#case {1} {s};
				#case {2} {#regex {$exits} {sw} {sw} {se}}
			}
		} {
			start
		}
	} {
		#regex {$exits} {n} {
			#switch {$rand} {
				#case {1} {n};
				#case {2} {#regex {$exits} {nw} {nw} {ne}}
			}
		} {
			start
		}
	}
}

/* Delays on read to initialize gxp variables */
#delay {first_hp}  {#send !hp} {4}
#delay {first_gs}  {#send !gs} {6}
#delay {second_hp} {#send !hp} {8}

#class {knight} {close}
