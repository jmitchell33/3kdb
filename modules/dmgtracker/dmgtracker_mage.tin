#class dmgtracker_mage kill;
#class dmgtracker_mage open;

#read $cwd/modules/dmgtracker/data.tin;

#unvar summon_dmg;
#var summon_dmg[first_round] $total_rounds;
#var spell_dmg[first_round] $total_rounds;

#delay 10 {summonDmg-clear;spellDmg-clear};

#alias summonDmg-clear {
    #unvar summon_dmg;
    #var summon_dmg[first_round] $total_rounds;
    #var summon_dmg[high] 0;
    #var summon_dmg[rnd] 0;
    #echo {<dfa> +-+-+-    SUMMON DAMAGE TRACKER RESET    -+-+-+<088>};
};

#alias spellDmg-clear {
    #unvar spell_dmg;
    #var spell_dmg[first_round] $total_rounds;
    #var spell_dmg[curr] 0s;
    #var spell_dmg[avg] 0;
    #var spell_dmg[rnd] 0;
    #var spell_dmg[dmg] 0;
    #var spell_dmg[high] 0;
    #echo {<dfa> +-+-+-    SPELL DAMAGE TRACKER RESET    -+-+-+<088>};
};

#alias summonDmg {
    #format dmgSummary {<dfa>%+20s %+9s %+9s %+9s %+9s<088>} {Summon} {Hits/Rnd} {Dmg/Hit} {Dmg/Rnd} {Total};
    #echo $dmgSummary;

    #var summon_dmg[current_round] $total_rounds;
    #math summon_dmg[tracked_rounds] {$summon_dmg[current_round] - $summon_dmg[first_round]};
    #foreach $summon_types_list[%*] summon {
        #var summonTotalDmg 0;
        #var summonPerHitDmg 0;
        #var summonTotalHits 0;
        #foreach $dmg_dataKey[%*] dmgItem {
            #if {$summon_dmg[$summon][total][$dmgItem][count] > 0} {
                #math summonItemTotalDmg {$summon_dmg[$summon][total][$dmgItem][count] * $dmg_data[melee][$dmgItem][min_dmg]};
                #math summonTotalDmg {$summonTotalDmg + $summonItemTotalDmg};
                #math summonTotalHits {$summonTotalHits + $summon_dmg[$summon][total][$dmgItem][count]};
            };
        };
        
        #math summonPerHitDmg {$summonTotalDmg / $summon_dmg[$summon][total][attempts]};
        #math summonHitsPerRnd {$summonTotalHits / $summon_dmg[tracked_rounds] * 1.0};
        #math summonPerRoundDmg {$summonTotalDmg / $summon_dmg[tracked_rounds] * 1.0};
        
        #format summonPerHitDmg {%d} {$summonPerHitDmg};
        #format summonPerHitDmg {%g} {$summonPerHitDmg};
        #format summonTotalDmg {%M} {$summonTotalDmg};
        #replace summonTotalDmg {G} {B};
        #format summonPerRoundDmg {%d} {$summonPerRoundDmg};
        #format summonPerRoundDmg {%g} {$summonPerRoundDmg};
        #format summon_dmg[tracked_rounds_rep] {%g} {$summon_dmg[tracked_rounds]};

        #if {$summonTotalDmg > 0} {
            #if {"$summon" == "Something"} {#var summon Phantasmal Killer};
            #format dmgSummary {%+20s %+9s %+9s %+9s %+9s} {$summon} {$summonHitsPerRnd} {$summonPerHitDmg} {$summonPerRoundDmg} {$summonTotalDmg};
            #echo $dmgSummary;
        };
    };
    #echo {<dfa>---------- TOTAL ROUNDS: $summon_dmg[tracked_rounds_rep] ----------<088>};
};

#alias summonRoundDmgCalc {
    #foreach $summon_types_list[%*] summon {
        #var summonTotalDmg 0;
        #var summonPerHitDmg 0;
        #var summonTotalHits 0;
        #foreach $dmg_dataKey[%*] dmgItem {
            #if {$summon_dmg[$summon][round][$dmgItem][count] > 0} {
                #math summonItemTotalDmg {$summon_dmg[$summon][round][$dmgItem][count] * $dmg_data[melee][$dmgItem][min_dmg]};
                #math summonTotalDmg {$summonTotalDmg + $summonItemTotalDmg};
                #math summonTotalHits {$summonTotalHits + $summon_dmg[$summon][total][$dmgItem][count]};
            };
        };
        
        #math summonPerHitDmg {$summonTotalDmg / $summon_dmg[$summon][round][attempts]};
        #math summonHitsPerRnd {$summonTotalHits};
        #math summonPerRoundDmg {$summonTotalDmg};
        
        #format summonPerHitDmg {%d} {$summonPerHitDmg};
        #format summonPerHitDmg {%g} {$summonPerHitDmg};
        #format summonTotalDmg {%M} {$summonTotalDmg};
        #replace summonTotalDmg {G} {B};
        #format summonPerRoundDmg {%d} {$summonPerRoundDmg};
        #format summonPerRoundDmg {%g} {$summonPerRoundDmg};
        #format summon_dmg[tracked_rounds_rep] {%g} {$summon_dmg[tracked_rounds]};

        #if {$summonTotalDmg > 0} {
            #if {"$summon" == "Something"} {#var summon Phantasmal Killer};
            #format dmgSummary {%+20s %+9s %+9s %+9s %+9s} {$summon} {$summonHitsPerRnd} {$summonPerHitDmg} {$summonPerRoundDmg} {$summonTotalDmg};
            #echo $dmgSummary;
        };
    };
};


#alias summonDmgRecord {
    #var foundItem 0;
    #format summonType {%p} {%1};
    #format summonHit {%p} {%2};
    #list summon_types_list find {$summonType} {foundItem};
    #if $foundItem {
        #math summon_dmg[$summonType][round][$summonHit][count] {$summon_dmg[$summonType][round][$summonHit][count] + 1};
        #math summon_dmg[$summonType][total][$summonHit][count] {$summon_dmg[$summonType][total][$summonHit][count] + 1};
        #math summon_dmg[$summonType][round][attempts] {$summon_dmg[$summonType][round][attempts] + 1};
        #math summon_dmg[$summonType][total][attempts] {$summon_dmg[$summonType][total][attempts] + 1};
    };
};

#alias spellDmgRecord {

};

#ACTION {^%* blow was deflected.$} {summonDmgRecord {%1} deflected};
#ACTION {^%* strike was ineffective.$} {summonDmgRecord {%1} ineffective};
#ACTION {^%* bobble your swing.$} {summonDmgRecord {%1} bobble};
#ACTION {^%* missed %*.$} {summonDmgRecord {%1} missed};
#ACTION {^%* tickled %* in the stomach.$} {summonDmgRecord {%1} tickled};
#ACTION {^%* grazed %*.$} {summonDmgRecord {%1} grazed};
#ACTION {^%* hit %*.} {summonDmgRecord {%1} hit};
#ACTION {^%* hit %* hard.$} {summonDmgRecord {%1} hit_hard};
#ACTION {^%* hit %* very hard.$} {summonDmgRecord {%1} hit_vhard};
#ACTION {^%* struck %* a mighty blow.$} {summonDmgRecord {%1} mighty};
#ACTION {^%* smashed %* with a bone crushing sound.$} {summonDmgRecord {%1} bonecrush};
#ACTION {^%* pulverized %* with a powerful attack.$} {summonDmgRecord {%1} pulverized};
#ACTION {^%* trounced %* up and down.$} {summonDmgRecord {%1} trounced};
#ACTION {^%* pummeled %* into small fragments.$} {summonDmgRecord {%1} pummeled};
#ACTION {^%* massacred %* into tiny fragments.$} {summonDmgRecord {%1} massacred};
#ACTION {^%* utterly annihilated %*.$} {summonDmgRecord {%1} annihilated};
#ACTION {^%* completely devastated %* with awesome force.$} {summonDmgRecord {%1} devastated};
#ACTION {^%* destroyed %*.$} {summonDmgRecord {%1} destroyed};
#ACTION {^%* absolutely massacred %*.$} {summonDmgRecord {%1} amassacred};
#ACTION {^%* thrashed %* completely.$} {summonDmgRecord {%1} thrashed};
#ACTION {^%* demolished %*.$} {summonDmgRecord {%1} demolished};
#ACTION {^%* nearly exterminated %*.$} {summonDmgRecord {%1} exterminated};
#ACTION {^%* obliterated %*.$} {summonDmgRecord {%1} obliterated};
#ACTION {^%* eradicated %*.$} {summonDmgRecord {%1} eradicated};
#ACTION {^%* decimated %*.} {summonDmgRecord {%1} decimated};
#ACTION {^%* beat %* like a rented mule.$} {summonDmgRecord {%1} rented_mule};
#ACTION {^%* exsanguinated %*.$} {summonDmgRecord {%1} exsanguinated};
#ACTION {^%* atomized %*.$} {summonDmgRecord {%1} atomized};
#ACTION {^%* beat %* like a red-headed step child.$} {summonDmgRecord {%1} step_child};
#ACTION {^%* drop-kicked %*.$} {summonDmgRecord {%1} dropkick};

#NOP #action {%* de-%*!!!} {spellDmgRecord de};
#NOP #action {%* wtfpwns %*.} {spellDmgRecord wtfpwns};
#NOP #action {%* murderominates %*.} {spellDmgRecord murderominates};
#NOP #action {%* obliterificatifies %*.} {spellDmgRecord obliterificatifies};
#NOP #action {%* gives %* COVID-19.} {spellDmgRecord covid};
#NOP #action {%* royally %!@'s %* up!!!} {spellDmgRecord fucks};
#NOP #action {%* slams into %* so hard, your downgrade gets closer!!!} {spellDmgRecord downgrade};
#NOP #action {%* deleted Spiral Gun's whole damn save file!!!} {spellDmgRecord deleted};
#NOP #action {%* wrecks %* into a mess worse than Havox's bot.} {spellDmgRecord wrecks};
#NOP #action {%* catches %* ousside, how 'bout that!?!} {spellDmgRecord ousside};
#NOP #action {%* spoiled %* like a slut in a horror film.} {spellDmgRecord spoiled};
#NOP #action {%* melted %* like a Salvador Dali painting!!!} {spellDmgRecord melted};
#NOP #action {%* offed %* like a George R. R. Martin protagonist!!} {spellDmgRecord offed};
#NOP #action {%* was ripped apart by the %* like a toddler with Play-Doh.} {spellDmgRecord ripped};
#NOP #action {%* EXTIRPATED every fabric of %* being!!} {spellDmgRecord extirpated};
#NOP #action {%* RAVAGED the very essence of %* body!!} {spellDmgRecord ravaged};
#NOP #action {%* EXPUNGED %* from existence!!} {spellDmgRecord expunged};
#NOP #action {%* TORE a hole into the fabric of %* reality!} {spellDmgRecord tore};
#NOP #action {%* trashed %* like a freshman at a frat party!!!} {spellDmgRecord trashed};
#NOP #action {%* MUTILATED %*, scattering pieces all over!!} {spellDmgRecord mutilated};
#NOP #action {The %* annihilated %* with overwhelming devastation!} {spellDmgRecord annihilated};
#NOP #action {%* is nearly erased from the force of your %*!} {spellDmgRecord erased};
#NOP #action {You unleash a torrent of destruction upon %* with your %*!!!} {spellDmgRecord destruction};
#NOP #action {The ground shakes as %* is torn asunder by your %*!!} {spellDmgRecord torn};
#NOP #action {%* survived the %* like a sandcastle at high tide!} {spellDmgRecord sand};
#NOP #action {A resounding wave of energy blasts from %*, shredded by your %*!} {spellDmgRecord shredded};
#NOP #action {The %* obliterated %* relentlessly!} {spellDmgRecord obliterated};
#NOP #action {The %* absolutely devastated %*!} {spellDmgRecord devastated};
#NOP #action {} {spellDmgRecord thrashed};
#NOP #action {The %* utterly destroyed %*!} {spellDmgRecord destroyed};
#NOP #action {Your %* thundered into %*!} {spellDmgRecord thundered};


#alias summonDmgRecordVaf {
    #if !$ewell_round {
        #if {$summonDmgNewRound} {
            #var summonDmgNewRound 0;
            #math summon_dmg[rnd] {$summon_dmg[rnd] + 1};
        };

        #var foundItem 0;
        #format summonType {%p} {%1};
        #format summonDmg {%d} {%2};
        #list summon_types_list find {%i$summonType} {foundItem};
        #var tmpRound $total_rounds;
        #if $foundItem {
            #math summon_dmg[vaf][$summonType][round][hits] {$summon_dmg[vaf][$summonType][round][hits] + 1};
            #math summon_dmg[vaf][$summonType][round][damage] {$summon_dmg[vaf][$summonType][round][damage] + $summonDmg};
            #if {$summon_dmg[vaf][$summonType][total][best] > 0} {#NOP} {#var summon_dmg[vaf][$summonType][total][best] 0};
            #math new_best {$summonDmg > $summon_dmg[vaf][$summonType][total][best]};
            #if $new_best {
                #var summon_dmg[vaf][$summonType][total][best] $summonDmg;
                #echo {<dfa>NEW BEST $summonType ROUND: $summon_dmg[vaf][$summonType][total][best]<088>};
            };
            #math summon_dmg[vaf][$summonType][total][hits] {$summon_dmg[vaf][$summonType][total][hits] + 1};
            #math summon_dmg[vaf][$summonType][total][damage] {$summon_dmg[vaf][$summonType][total][damage] + $summonDmg};
            #if {$summon_dmg[vaf][$summonType][last_round] == $total_rounds} {#NOP} {
                #loop 1 &my[summons][] tmpSummonIndex {
                    #regex {$summonType} {%i$my[summons][$tmpSummonIndex][name]} {
                        #math summon_dmg[vaf][$summonType][count] {$summon_dmg[vaf][$summonType][count] + $my[summons][$tmpSummonIndex][count]};
                    };
                };
                #math summon_dmg[vaf][$summonType][total][rounds] {$summon_dmg[vaf][$summonType][total][rounds] + 1};
                #var summon_dmg[vaf][$summonType][last_round] $total_rounds;
            };
        };
    };
};

#alias summonDmgVaf {
    #format dmgSummary {<dfa>%+20s %+9s %+9s %+9s %+9s %+9s<088>} {Summon} {Hits/Rnd} {Dmg/Hit} {Dmg/Rnd} {Best} {Total};
    #echo $dmgSummary;

    
    #foreach *summon_dmg[vaf][%*] tmpSummonItem {
        #math summonDmgRoundNormalizer {$summon_dmg[vaf][$tmpSummonItem][count] / $summon_dmg[vaf][$tmpSummonItem][total][rounds] * 1.0};
        #math summonPerHitDmg {$summon_dmg[vaf][$tmpSummonItem][total][damage] / $summon_dmg[vaf][$tmpSummonItem][total][hits]};
        #math summonHitsPerRnd {$summon_dmg[vaf][$tmpSummonItem][total][hits] / $summon_dmg[vaf][$tmpSummonItem][total][rounds] * 1.0 / $summonDmgRoundNormalizer};
        #math summonPerRoundDmg {$summon_dmg[vaf][$tmpSummonItem][total][damage] / $summon_dmg[vaf][$tmpSummonItem][total][rounds] * 1.0 / $summonDmgRoundNormalizer};
        
        #format summonPerHitDmg {%d} {$summonPerHitDmg};
        #format summonPerHitDmg {%g} {$summonPerHitDmg};
        #format summonTotalDmg {%M} {$summon_dmg[vaf][$tmpSummonItem][total][damage]};
        #replace summonTotalDmg {G} {B};
        #format summonPerRoundDmg {%d} {$summonPerRoundDmg};
        #format summonPerRoundDmg {%g} {$summonPerRoundDmg};
        #format summon_dmg[tracked_rounds_rep] {%g} {$summon_dmg[rnd]};
        #format summonBestDmg {%g} {$summon_dmg[vaf][$tmpSummonItem][total][best]};

        #if {$summonTotalDmg > 0} {
            #if {"$summon" == "Something"} {#var summon Phantasmal Killer};
            #format dmgSummary {%+20s %+9s %+9s %+9s %+9s %+9s} {$tmpSummonItem} {$summonHitsPerRnd} {$summonPerHitDmg} {$summonPerRoundDmg} {$summonBestDmg} {$summonTotalDmg};
            #echo $dmgSummary;
        };
    };
    #echo {<dfa>---------- TOTAL ROUNDS: $summon_dmg[tracked_rounds_rep] ----------<088>};
};

#NOP -- Some mob names are very different from their name on summon list/normal melee - we'll manually override these;
#action {^A %* hit for %d damage!$} {
    #format summonType {%p} {%1};
    #NOP -- monster summoning 11;
    #if {"$summonType" == "Fey Sprite"} {
        #var summonType Fey sprite;
    };
    #if {"$summonType" == "Chain Devil"} {
        #var summonType Chain devil;
    };
    #if {"$summonType" == "Celestial Hawk"} {
        #var summonType Celestial hawk;
    };
    #NOP -- monster summoning 10;
    #if {"$summonType" == "Celestial Lion"} {
        #var summonType Celestial lion;
    };
    #if {"$summonType" == "Shadow Panther"} {
        #var summonType Shadow panther;
    };
    #NOP -- monster summoning 9;
    #if {"$summonType" == "Beast Owlbear"} {
        #var summonType Beast owlbear;
    };
    #if {"$summonType" == "Demon Hellhound"} {
        #var summonType Demon hellhound;
    };
    #if {"$summonType" == "Fey Dryad"} {
        #var summonType Fey dryad;
    };
    #NOP -- monster summoning 7;
    #if {"$summonType" == "Hu-goddamn-mongous 10-headed Hydra"} {
        #var summonType 10-headed hydra;
    };
    #if {"$summonType" == "Huge Flaming Phoenix"} {
        #var summonType Phoenix;
    };
    #if {"$summonType" == "Damn Ugly Mind-flayer"} {
        #var summonType Mind-flayer;
    };
    #if {"$summonType" == "Crimson-red Fire Lizard"} {
        #var summonType Fire lizard;
    };
    #if {"$summonType" == "Obsidian-black Gorgon"} {
        #var summonType Gorgon;
    };
    #if {"$summonType" == "Shimmering Spectre"} {
        #var summonType Spectre;
    };
    #if {"$summonType" == "Gargantuan Roper"} {
        #var summonType Roper;
    };
    #if {"$summonType" == "2-headed Ettin"} {
        #var summonType Ettin;
    };
    #if {"$summonType" == "Rock-encrusted Xorn"} {
        #var summonType Xorn;
    };
    #if {"$summonType" == "Fugly Night Hag"} {
        #var summonType Night hag;
    };
    #if {"$summonType" == "Giant Umber Hulk"} {
        #var summonType Umber hulk;
    };
    #if {"$summonType" == "3-headed Chimera"} {
        #var summonType Chimera;
    };
    #if {"$summonType" == "Giant Slug"} {
        #var summonType Giant slug;
    };
    #if {"$summonType" == "Rotting Mummy"} {
        #var summonType Mummy;
    };
    #NOP -- monster summoning 6;
    #if {"$summonType" == "Disfigured Jackalwere"} {
        #var summonType Jackalwere;
    };
    #if {"$summonType" == "Shimmering Phase Spider"} {
        #var summonType Phase spider;
    };
    #if {"$summonType" == "Stinky-assed Otyugh"} {
        #var summonType Otyugh;
    };
    #if {"$summonType" == "Disfigured Weretiger"} {
        #var summonType Weretiger;
    };
    #if {"$summonType" == "Firey Salamander"} {
        #var summonType Salamander;
    };
    #if {"$summonType" == "Dangerous Rakshasa"} {
        #var summonType Rakshasa;
    };
    #if {"$summonType" == "Near-invisible Wraith"} {
        #var summonType Wraith;
    };
    #if {"$summonType" == "Terrifying Manticore"} {
        #var summonType Manticore;
    };
    #if {"$summonType" == "Terrible Wyvern"} {
        #var summonType Wyvern;
    };
    #if {"$summonType" == "Powerful Ogre Magi"} {
        #var summonType Ogre magi;
    };
    #if {"$summonType" == "Disgusting Carrion Crawler"} {
        #var summonType Carrion crawler;
    };
    #if {"$summonType" == "Rotting Wight"} {
        #var summonType Wight;
    };
    #NOP -- monster summoning 5;
    #if {"$summonType" == "Shimmering Black Displacer Beast"} {
        #var summonType Displacer beast;
    };
    #if {"$summonType" == "Gnarly 7-headed Hydra"} {
        #var summonType 7-headed hydra;
    };
    #if {"$summonType" == "Giant Poisonous Snake"} {
        #var summonType Poisonous snake;
    };
    #if {"$summonType" == "Disfigured Wereboar"} {
        #var summonType Wereboar;
    };
    #if {"$summonType" == "Nasty Cockatrice"} {
        #var summonType Cockatrice;
    };
    #if {"$summonType" == "Giant Spider"} {
        #var summonType Giant spider;
    };
    #if {"$summonType" == "Swift Leucrotta"} {
        #var summonType Leucrotta;
    };
    #NOP -- monster summoning 4;
    #if {"$summonType" == "Dark Shadow"} {
        #var summonType Dark shadow;
    };
    #if {"$summonType" == "Huge Owlbear"} {
        #var summonType Huge owlbear;
    };
    #if {"$summonType" == "Giant Constrictive Snake"} {
        #var summonType Constrictive snake;
    };
    #if {"$summonType" == "Carnivorous Ape"} {
        #var summonType Carnivorous ape;
    };
    #if {"$summonType" == "Rotting Ghast"} {
        #var summmonType Rotting ghast;
    };
    #if {"$summonType" == "Disfigured Werewolf"} {
        #var summonType Werewolf;
    };
    #if {"$summonType" == "5-headed Hydra"} {
        #var summonType 5-headed hydra;
    };
    #if {"$summonType" == "Froth-mouthed Hell Hound"} {
        #var summonType Hell hound;
    };
    #if {"$summonType" == "Large Ice Toad"} {
        #var summonType Ice toad;
    };
    #if {"$summonType" == "Stony Gargoyle"} {
        #var summonType Gargoyle;
    };
    summonDmgRecordVaf {$summonType} {%2}
};

#action {^An %* hit for %d damage!$} {
    #format summonType {%p} {%1};
    #NOP -- monster summoning 10;
    #if {"$summonType" == "Undead Wraith"} {
        #var summonType Wraith;
    };
    #NOP -- monster summoning 8;
    #if {"$summonType" == "Enormous Storm Giant"} {
        #var summonType Storm giant;
    };
    #if {"$summonType" == "Enormous Cloud Giant"} {
        #var summonType Cloud giant;
    };
    #NOP -- monster summoning 7;
    #if {"$summonType" == "Enormous, 8-headed Pyro-hydra"} {
        #var summonType pyro-hydra;
    };
    #if {"$summonType" == "Enormous Fire Giant"} {
        #var summonType Fire giant;
    };
    #if {"$summonType" == "Enormous Frost Giant"} {
        #var summonType Frost giant;
    };
    #if {"$summonType" == "Enormous Stone Giant"} {
        #var summonType Stone giant;
    };
    #if {"$summonType" == "Enormous Hill Giant"} {
        #var summonType Hill giant;
    };
    #if {"$summonType" == "Enormous Neo-otyugh"} {
        #var summonType Neo-otyugh;
    };
    #NOP -- monster summoning 6;
    #if {"$summonType" == "Enormous Troll"} {
        #var summonType Troll;
    };
    #if {"$summonType" == "Enormous 8-headed Hydra"} {
        #var summonType 8-headed hydra;
    };
    #NOP -- monster summoning 5;
    #if {"$summonType" == "Enormous Minotaur"} {
        #var summonType Minotaur;
    };
    #NOP -- monster summoning 4;
    #if {"$summonType" == "Enormous Poisonous Toad"} {
        #var summonType Poisonous toad;
    };
    summonDmgRecordVaf {$summonType} {%2}
};

#action {^%* (%w Golem) hit for %d damage!$} {summonDmgRecordVaf {%2 golem} {%3}};
#action {^0 hit for %d damage!$} {summonDmgRecordVaf {Something} {%1}};


#class dmgtracker_mage close;