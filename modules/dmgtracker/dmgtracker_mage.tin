#class dmgtracker_mage kill;
#class dmgtracker_mage open;

#read $cwd/modules/dmgtracker/data.tin;

#unvar summon_dmg;
#var summon_dmg[first_round] $total_rounds;
#var spell_dmg[first_round] $total_rounds;

#delay 10 {summonDmg-clear;spellDmg-clear};

#alias summonDmg-clear {
    #unvar summon_dmg;
    #var summon_dmg[first_round] $total_rounds;
    #echo {<dfa> +-+-+-    SUMMON DAMAGE TRACKER RESET    -+-+-+<088>};
};

#alias spellDmg-clear {
    #unvar spell_dmg;
    #var spell_dmg[first_round] $total_rounds;
    #echo {<dfa> +-+-+-    SPELL DAMAGE TRACKER RESET    -+-+-+<088>};
};

#alias summonDmg {
    #format dmgSummary {<dfa>%+20s %+9s %+9s %+9s %+9s<088>} {Summon} {Hits/Rnd} {Dmg/Hit} {Dmg/Rnd} {Total};
    #echo $dmgSummary;

    #var summon_dmg[current_round] $total_rounds;
    #math summon_dmg[tracked_rounds] {$summon_dmg[current_round] - $summon_dmg[first_round]};
    #foreach $summon_types_list[%*] summon {
        #var summonTotalDmg 0;
        #var summonPerHitDmg 0;
        #var summonTotalHits 0;
        #foreach $dmg_dataKey[%*] dmgItem {
            #if {$summon_dmg[$summon][total][$dmgItem][count] > 0} {
                #math summonItemTotalDmg {$summon_dmg[$summon][total][$dmgItem][count] * $dmg_data[melee][$dmgItem][min_dmg]};
                #math summonTotalDmg {$summonTotalDmg + $summonItemTotalDmg};
                #math summonTotalHits {$summonTotalHits + $summon_dmg[$summon][total][$dmgItem][count]};
            };
        };
        
        #math summonPerHitDmg {$summonTotalDmg / $summon_dmg[$summon][total][attempts]};
        #math summonHitsPerRnd {$summonTotalHits / $summon_dmg[tracked_rounds] * 1.0};
        #math summonPerRoundDmg {$summonTotalDmg / $summon_dmg[tracked_rounds] * 1.0};
        
        #format summonPerHitDmg {%d} {$summonPerHitDmg};
        #format summonPerHitDmg {%g} {$summonPerHitDmg};
        #format summonTotalDmg {%M} {$summonTotalDmg};
        #replace summonTotalDmg {G} {B};
        #format summonPerRoundDmg {%d} {$summonPerRoundDmg};
        #format summonPerRoundDmg {%g} {$summonPerRoundDmg};
        #format summon_dmg[tracked_rounds_rep] {%g} {$summon_dmg[tracked_rounds]};

        #if {$summonTotalDmg > 0} {
            #if {"$summon" == "Something"} {#var summon Phantasmal Killer};
            #format dmgSummary {%+20s %+9s %+9s %+9s %+9s} {$summon} {$summonHitsPerRnd} {$summonPerHitDmg} {$summonPerRoundDmg} {$summonTotalDmg};
            #echo $dmgSummary;
        };
    };
    #echo {<dfa>---------- TOTAL ROUNDS: $summon_dmg[tracked_rounds_rep] ----------<088>};
};

#alias summonRoundDmgCalc {
    #foreach $summon_types_list[%*] summon {
        #var summonTotalDmg 0;
        #var summonPerHitDmg 0;
        #var summonTotalHits 0;
        #foreach $dmg_dataKey[%*] dmgItem {
            #if {$summon_dmg[$summon][round][$dmgItem][count] > 0} {
                #math summonItemTotalDmg {$summon_dmg[$summon][round][$dmgItem][count] * $dmg_data[melee][$dmgItem][min_dmg]};
                #math summonTotalDmg {$summonTotalDmg + $summonItemTotalDmg};
                #math summonTotalHits {$summonTotalHits + $summon_dmg[$summon][total][$dmgItem][count]};
            };
        };
        
        #math summonPerHitDmg {$summonTotalDmg / $summon_dmg[$summon][round][attempts]};
        #math summonHitsPerRnd {$summonTotalHits};
        #math summonPerRoundDmg {$summonTotalDmg};
        
        #format summonPerHitDmg {%d} {$summonPerHitDmg};
        #format summonPerHitDmg {%g} {$summonPerHitDmg};
        #format summonTotalDmg {%M} {$summonTotalDmg};
        #replace summonTotalDmg {G} {B};
        #format summonPerRoundDmg {%d} {$summonPerRoundDmg};
        #format summonPerRoundDmg {%g} {$summonPerRoundDmg};
        #format summon_dmg[tracked_rounds_rep] {%g} {$summon_dmg[tracked_rounds]};

        #if {$summonTotalDmg > 0} {
            #if {"$summon" == "Something"} {#var summon Phantasmal Killer};
            #format dmgSummary {%+20s %+9s %+9s %+9s %+9s} {$summon} {$summonHitsPerRnd} {$summonPerHitDmg} {$summonPerRoundDmg} {$summonTotalDmg};
            #echo $dmgSummary;
        };
    };
};


#alias summonDmgRecord {
    #var foundItem 0;
    #format summonType {%p} {%1};
    #format summonHit {%p} {%2};
    #list summon_types_list find {$summonType} {foundItem};
    #if $foundItem {
        #math summon_dmg[$summonType][round][$summonHit][count] {$summon_dmg[$summonType][round][$summonHit][count] + 1};
        #math summon_dmg[$summonType][total][$summonHit][count] {$summon_dmg[$summonType][total][$summonHit][count] + 1};
        #math summon_dmg[$summonType][round][attempts] {$summon_dmg[$summonType][round][attempts] + 1};
        #math summon_dmg[$summonType][total][attempts] {$summon_dmg[$summonType][total][attempts] + 1};
    };
};

#alias spellDmgRecord {

}

#ACTION {^%* blow was deflected.$} {summonDmgRecord {%1} deflected};
#ACTION {^%* strike was ineffective.$} {summonDmgRecord {%1} ineffective};
#ACTION {^%* bobble your swing.$} {summonDmgRecord {%1} bobble};
#ACTION {^%* missed %*.$} {summonDmgRecord {%1} missed};
#ACTION {^%* tickled %* in the stomach.$} {summonDmgRecord {%1} tickled};
#ACTION {^%* grazed %*.$} {summonDmgRecord {%1} grazed};
#ACTION {^%* hit %*.} {summonDmgRecord {%1} hit};
#ACTION {^%* hit %* hard.$} {summonDmgRecord {%1} hit_hard};
#ACTION {^%* hit %* very hard.$} {summonDmgRecord {%1} hit_vhard};
#ACTION {^%* struck %* a mighty blow.$} {summonDmgRecord {%1} mighty};
#ACTION {^%* smashed %* with a bone crushing sound.$} {summonDmgRecord {%1} bonecrush};
#ACTION {^%* pulverized %* with a powerful attack.$} {summonDmgRecord {%1} pulverized};
#ACTION {^%* trounced %* up and down.$} {summonDmgRecord {%1} trounced};
#ACTION {^%* pummeled %* into small fragments.$} {summonDmgRecord {%1} pummeled};
#ACTION {^%* massacred %* into tiny fragments.$} {summonDmgRecord {%1} massacred};
#ACTION {^%* utterly annihilated %*.$} {summonDmgRecord {%1} annihilated};
#ACTION {^%* completely devastated %* with awesome force.$} {summonDmgRecord {%1} devastated};
#ACTION {^%* destroyed %*.$} {summonDmgRecord {%1} destroyed};
#ACTION {^%* absolutely massacred %*.$} {summonDmgRecord {%1} amassacred};
#ACTION {^%* thrashed %* completely.$} {summonDmgRecord {%1} thrashed};
#ACTION {^%* demolished %*.$} {summonDmgRecord {%1} demolished};
#ACTION {^%* nearly exterminated %*.$} {summonDmgRecord {%1} exterminated};
#ACTION {^%* obliterated %*.$} {summonDmgRecord {%1} obliterated};
#ACTION {^%* eradicated %*.$} {summonDmgRecord {%1} eradicated};
#ACTION {^%* decimated %*.} {summonDmgRecord {%1} decimated};
#ACTION {^%* beat %* like a rented mule.$} {summonDmgRecord {%1} rented_mule};
#ACTION {^%* exsanguinated %*.$} {summonDmgRecord {%1} exsanguinated};
#ACTION {^%* atomized %*.$} {summonDmgRecord {%1} atomized};
#ACTION {^%* beat %* like a red-headed step child.$} {summonDmgRecord {%1} step_child};
#ACTION {^%* drop-kicked %*.$} {summonDmgRecord {%1} dropkick};

#NOP #action {} {spellDmgRecord de};
#NOP #action {} {spellDmgRecord murderominates};
#NOP #action {} {spellDmgRecord obliterificatifies};
#NOP #action {%* gives %* COVID-19.} {spellDmgRecord covid};
#NOP #action {%* royally %!@'s %* up!!!} {spellDmgRecord fucks};
#NOP #action {%* slams into %* so hard, your downgrade gets closer!!!} {spellDmgRecord downgrade};
#NOP #action {%* deleted Spiral Gun's whole damn save file!!!} {spellDmgRecord deleted};
#NOP #action {%* wrecks %* into a mess worse than Havox's bot.} {spellDmgRecord wrecks};
#NOP #action {%* catches %* ousside, how 'bout that!?!} {spellDmgRecord ousside};
#NOP #action {%* spoiled %* like a slut in a horror film.} {spellDmgRecord spoiled};
#NOP #action {%* melted %* like a Salvador Dali painting!!!} {spellDmgRecord melted};
#NOP #action {%* offed %* like a George R. R. Martin protagonist!!} {spellDmgRecord offed};
#NOP #action {%* was ripped apart by the %* like a toddler with Play-Doh.} {spellDmgRecord ripped};
#NOP #action {%* EXTIRPATED every fabric of %* being!!} {spellDmgRecord extirpated};
#NOP #action {%* RAVAGED the very essence of %* body!!} {spellDmgRecord ravaged};
#NOP #action {%* EXPUNGED %* from existence!!} {spellDmgRecord expunged};
#NOP #action {%* TORE a hole into the fabric of %* reality!} {spellDmgRecord tore};
#NOP #action {%* trashed %* like a freshman at a frat party!!!} {spellDmgRecord trashed};
#NOP #action {%* MUTILATED %*, scattering pieces all over!!} {spellDmgRecord mutilated};
#NOP #action {The %* annihilated %* with overwhelming devastation!} {spellDmgRecord annihilated};
#NOP #action {%* is nearly erased from the force of your %*!} {spellDmgRecord erased};
#NOP #action {You unleash a torrent of destruction upon %* with your %*!!!} {spellDmgRecord destruction};
#NOP #action {The ground shakes as %* is torn asunder by your %*!!} {spellDmgRecord torn};
#NOP #action {%* survived the %* like a sandcastle at high tide!} {spellDmgRecord sand};
#NOP #action {A resounding wave of energy blasts from %*, shredded by your %*!} {spellDmgRecord shredded};
#NOP #action {The %* obliterated %* relentlessly!} {spellDmgRecord obliterated};
#NOP #action {The %* absolutely devastated %*!} {spellDmgRecord devastated};
#NOP #action {} {spellDmgRecord thrashed};
#NOP #action {The %* utterly destroyed %*!} {spellDmgRecord destroyed};
#NOP #action {Your %* thundered into %*!} {spellDmgRecord thundered};



#class dmgtracker_mage close;